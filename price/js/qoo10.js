if (window.location.href.indexOf("www.qoo10.sg") > - 1) {
__PAGE_VALUE = {"COOKE_DOMAIN":"qoo10.sg", "ROOT_PATH":"/gmkt.inc", "EVENT_ROOT_PATH":"/gmkt.inc.event", "SERVICE_PATH":"/gmkt.inc/", "SERVER_NAME":"SGWWW38", "SERVER_IP":"182.162.2.169", "CLIENT_IP":"49.156.53.241", "TRUE_CLIENT_IP":"49.156.53.241", "CLIENT_CDN_IP":"61.111.58.228", "APP_NO":5, "WWW_SERVER":"https://www.qoo10.sg", "MOBILE_SERVER":"https://m.qoo10.sg", "MEMBER_SERVER":"https://www.qoo10.sg", "LOGIN_SERVER":"https://www.qoo10.sg", "CATEGORY_SERVER":"https://www.qoo10.sg", "SEARCH_SERVER":"https://www.qoo10.sg", "MY_SERVER":"https://www.qoo10.sg", "ORDER_SERVER":"https://www.qoo10.sg", "GOODS_SERVER":"https://www.qoo10.sg", "COUPON_SERVER":"https://www.qoo10.sg", "EVENT_SERVER":"https://www.qoo10.sg", "EVENT_CONTENT_SERVER":"https://www.qoo10.sg", "OPENAPI_SERVER":"http://api.qoo10.sg", "DP_IMAGE_PATH":"https://dp.image-gmkt.com", "VPOT_PATH":"https://vpot.image-gmkt.com", "DP_SSL_IMAGE_PATH":"https://dp.image-gmkt.com", "STATIC_IMAGE_PATH":"//stsg.image-gmkt.com", "STATIC_SSL_IMAGE_PATH":"//stsg.image-gmkt.com", "GOODS_IMAGE_PATH":"http://gd.image-gmkt.com", "GOODS_SSL_IMAGE_PATH":"https://gd.image-gmkt.com", "OPENAPI_PATH":"/GMKT.INC.Front.OpenApiService", "IS_LOCAL_SERVER":false, "PG_SERVER":"http://qpg.qoo10.com/gmkt.inc.pgservice.service", "IS_LOCAL_SERVER_ORG":false, "FRONT_STILL_IMAGE":false, "IS_OTHERSITE":false, "IS_MULTISITE":false, "SITEID":"DEFAULT", "VIEW_SITEID":"DEFAULT", "QOO10_GOODS_SERVER":"", "QOO10_SERVER":"https://www.qoo10.sg", "Is_FullSSL":true, "PAGE_NO":51, "PAGE_CONTEXT_ID":"89875a01-7ba3-4b77-91dd-5ab882e13997", "REFERRER_SVC_NATION_CD":"SG", "IS_LOGIN":false}; var GMKT = GMKT || {}; GMKT.ServiceInfo = {"LoginCookieName":"GMKT.FRONT.SG", "ServerTime":"Dec 05, 2017 09:27:02", "money_format":"0,000.00", "currencyCode":"SGD", "ClientLang":"en", "culture":"en", "DateFormat":"MMM dd, yyyy HH:mm:ss", "LangCookieName":"gmktLang", "currency":"S$", "region":"SG", "nation":"SG", "viewCurrencyCode":"SGD", "currencyGroupSeperator":","}; GMKT.DeviceInfo = {"WebpSupport":"Y", "Code":"Windows_NT_10.0::Chrome::Desktop", "OS":"Windows NT 10.0", "DeviceName":"Windows NT 10.0", "BrowserVersion":"Chrome/62.0.3202.94 Safari/537.36", "BrowserName":"Chrome", "Kind":"Desktop"};
        if (!window.__ClientResource)window.__ClientResource = new Array(); __ClientResource["{0}mameq is required"] = "{0} MameQ"; __ClientResource["add to favorite shop"] = "Please follow this shop and get discount chance."; __ClientResource["adjustment  price"] = ""; __ClientResource["adjustment price"] = "Adjusted Amount"; __ClientResource["affiliate discount"] = "Partnership Discount"; __ClientResource["alert_added"] = "Successfully added."; __ClientResource["alert_already"] = "You have already added this seller shop."; __ClientResource["alert_cannot_use_coupon_when_nego"] = "Item coupon is applied. To proceed bargaining, item coupons must be not applied."; __ClientResource["alert_chackbul_coupon"] = "You cannot use shipping rate discount coupon for Charge on delivery."; __ClientResource["alert_check_app_android"] = "Your Live10 Version is {0}.  \n\nBargain is available on [Live10 Android 3.5.7]or later. "; __ClientResource["alert_check_app_apple"] = "Your Live10 Version is {0}. \n\nBargain is available on [Live10 iOS 3.3.3] or later."; __ClientResource["alert_check_reasonable_nego_price"] = "Please enter the compatible price for a successful negotiation."; __ClientResource["alert_discount_apply1"] = "Coupon has already been applied. \nApplying {0} will withdraw existing coupon discount. \nDo you still want to apply 'item discount'?"; __ClientResource["alert_discount_apply2"] = "This Item is on '{0}'. You cannot use discount coupon for Item on '{0}'."; __ClientResource["alert_discount_promotion_coupon"] = "Item Coupon is not available for promotion discount(Q-discount,timesale) Item."; __ClientResource["alert_enter_request_info"] = "Please enter options Info."; __ClientResource["alert_event_sale"] = "Sorry, this discount is applied for winners of '{0}'."; __ClientResource["alert_event_sale_page"] = "Sorry, this discount is applied for winners of '{0}'. \r\nAre you sure to move to event page?"; __ClientResource["alert_failed"] = "Sorry. Failed to add."; __ClientResource["alert_kakaku_event_notice"] = "<div class=\"event_notice\">\n    <strong style=\"color:#f90f0e\">■Qoo10からのお知らせ</strong>\n <div style=\"color:#ff5960\">\n    Qoo10 EVENTの商品はQoo10で管理・運営いたしております。<br />\n    ただし、商品状況によってはQoo10が依頼をしている発送元より直接配送される場合がございます。<br />\n    商品詳細や配送状況については発送元に確認が必要な場合がございますので、お時間頂く事もございますのでご了承お願い致します。\n </div>\n</div>"; __ClientResource["alert_msg_1"] = "Please select options."; __ClientResource["alert_msg_10"] = "Please select the item to delete."; __ClientResource["alert_msg_11"] = "You cannot change quantity of order when coupon discount has already been applied. \n\n If you want to change quantity of order, please click ‘Cancel’ to cancel for coupon discount."; __ClientResource["alert_msg_2"] = "This item is temporarilly unavailable"; __ClientResource["alert_msg_3"] = "You input a wrong order Qty."; __ClientResource["alert_msg_4_1"] = "Available Order Qty is"; __ClientResource["alert_msg_4_2"] = "Qty"; __ClientResource["alert_msg_5"] = "Maximum Order Qty is 999 Qty"; __ClientResource["alert_msg_6"] = "Minimum Order Qty is 1"; __ClientResource["alert_msg_7"] = "You input invalid information"; __ClientResource["alert_msg_8"] = "You can select only up to 10"; __ClientResource["alert_msg_9"] = "You have to select minimum one time."; __ClientResource["alert_msg12"] = "Successfully added to your wish List, Do you want to see your Wish list?"; __ClientResource["alert_msg13"] = "Sorry. It is not available to use this service now."; __ClientResource["alert_msg14"] = "You can not send email anymore today. Please try again tomorrow."; __ClientResource["alert_msg15"] = "You cannot add bookmarks anymore."; __ClientResource["alert_msg16"] = "Sign in please."; __ClientResource["alert_msg17"] = "You do not have enough Q·stamps required."; __ClientResource["alert_msg18"] = "URL of this page is copied."; __ClientResource["alert_msg19"] = "Your browser doesn't allow copying URL.\nPlease copy manually to share it with your friends."; __ClientResource["alert_msg20"] = "Please select tickets by clicking \"Add Ticket\"."; __ClientResource["alert_msg21"] = "Sorry. This item has a special discount. You cannot apply coupon discount to this item."; __ClientResource["alert_msg22"] = "Added the chosen options to the list."; __ClientResource["alert_msg23"] = "Stock is not enough. [Max Qty:{0}]"; __ClientResource["alert_msg24"] = "[Please choose the above option first.]"; __ClientResource["alert_nego_login"] = "Only Qoo10 members are able to bargain with seller. Please Log in first."; __ClientResource["alert_qtalk_install"] = "Bargain message will be sent to Qoo10 account.\n\nSo please check if this account is logged in Live10."; __ClientResource["alert_time_sale1"] = "Sorry, you cannot apply time sale price at this time. Time sale available period: {0}"; __ClientResource["am"] = "AM"; __ClientResource["arrivenationcl"] = "Arrival"; __ClientResource["available"] = "Available"; __ClientResource["available shipping date"] = "Available shipping date"; __ClientResource["available_alltime"] = "Available : Alltime"; __ClientResource["bargain price {0}"] = "Your Offer({0}) : "; __ClientResource["btn change"] = "Change"; __ClientResource["businessdays"] = "Business Days"; __ClientResource["cancel"] = "Cancel"; __ClientResource["canceldiscount"] = "Cancel discount"; __ClientResource["cancellation"] = "Cancellation"; __ClientResource["change coupon"] = "Change Coupon"; __ClientResource["checkdetailqtalk_client"] = "Seller sent you contents message. Please check your Qpost(Qbox > Qpost >My Inquiry)."; __ClientResource["chk_limited_qty_yn_alert"] = "Purchase/Discount Qty is limited for this item. Please Log in first."; __ClientResource["chk_msg_3"] = "This item currently has been stopped selling. \nFor more details, please contact customer service."; __ClientResource["clientcurrencynotice"] = "(*Your payment calculates actually in USD)"; __ClientResource["clientdiscountmsg"] = "Additional Off"; __ClientResource["close1"] = "CLOSE"; __ClientResource["complete sending a message"] = "Live10 message has been sent successfully."; __ClientResource["contents service"] = "Online Service"; __ClientResource["contents service info"] = "TOP-UP will be completed within 5 minutes after you input your mobile number at MyQoo10."; __ClientResource["copy url 1"] = "COPY URL"; __ClientResource["countrycl"] = "Country"; __ClientResource["coupon"] = "coupon"; __ClientResource["coupondiscount"] = "Discount"; __ClientResource["days"] = "day"; __ClientResource["deal price"] = "Daily deal"; __ClientResource["delivery method {0}"] = "Delivery Method : {0}"; __ClientResource["delivery method desc"] = "※Shipping rate will be charged when ordering. Bargaining is available for only item price. "; __ClientResource["delivery time"] = "Delivery time"; __ClientResource["deliverycartcoupontxt"] = "Shipping Discount"; __ClientResource["discount"] = "Additional Off"; __ClientResource["discount price"] = "Discounted Price"; __ClientResource["discountprice"] = "Discounted Price"; __ClientResource["donation"] = "Donation"; __ClientResource["early bird discount"] = "Early Bird Discount"; __ClientResource["early bird event text"] = "Discount will end when qty for the event is sold out. Hurry up not to miss this chance!"; __ClientResource["en"] = "English"; __ClientResource["ended"] = "Ended"; __ClientResource["etccoupondiscount"] = "Discount"; __ClientResource["event sale"] = "Event Sale"; __ClientResource["failed sending a message"] = "Failed to send Live10 message."; __ClientResource["failed_sending_qtalk_msg"] = "Failed to send inquiry."; __ClientResource["fellow discount"] = "Shop Fellow Discount"; __ClientResource["fellow price"] = "Fellow Price"; __ClientResource["free"] = "Free"; __ClientResource["fri"] = "Fri"; __ClientResource["fw 프로모션 코드 불일치"] = "Sorry, your password is wrong. Please check the password and try again."; __ClientResource["groupbuy_alert_1"] = "Available stock is not enough for your order. Please reduce your order quantity. "; __ClientResource["groupbuy_alert_2"] = "Your order exceed the purchase limit Qty per person.(Previous Order: {0} Qty)"; __ClientResource["groupbuy_confirm_alert_1"] = "Note: If the minimum quantity is not met, your order will be cancelled & refunded automatically. Transaction fees incurred due to choice of payment mode, if any, will not be refunded.\n"; __ClientResource["groupbuy_confirm_alert_2"] = "(You cannot cancel/refund this item)"; __ClientResource["groupbuy_confirm_alert_3"] = "Deal is ON! Click ‘Ok’ to purchase!"; __ClientResource["header qx quick delivery time"] = "QX Quick Delivery date & time"; __ClientResource["hour"] = "hr"; __ClientResource["itemdiscount"] = "Item Discount"; __ClientResource["ja"] = "Japanese"; __ClientResource["ko"] = "Korean"; __ClientResource["loading"] = "Loading.."; __ClientResource["mamego price"] = "MameGo Price"; __ClientResource["mameq price"] = "MameQ Price"; __ClientResource["mameqchance"] = "MameQ·Chance"; __ClientResource["mameqrequirement"] = "Condition"; __ClientResource["medi_checkalert"] = "Before buying first-class OTC drugs, check the notification."; __ClientResource["meet hand over"] = "Meet & Hand Over"; __ClientResource["minute"] = "min"; __ClientResource["mobile_alert_msg21"] = ""; __ClientResource["mon"] = "Mon"; __ClientResource["months"] = "month"; __ClientResource["my coupon used"] = "My Coupon Used"; __ClientResource["my mameq{0}"] = "(My MameQ : {0})"; __ClientResource["nego_notice {0}"] = "To bargain with seller, total order amount must be over {0}."; __ClientResource["no option"] = "This item has no option."; __ClientResource["no option {0}"] = "This item has no option. (Qty:{0})"; __ClientResource["not enough mamego chance"] = "Insufficient Mamemon."; __ClientResource["not enough mameq"] = "Not enough MameQ."; __ClientResource["off"] = "off"; __ClientResource["option {0} (qty:{1})"] = "Option {0} (Qty:{1})"; __ClientResource["options"] = "/ Options"; __ClientResource["order_limit_alert_1"] = "Purchase/Discount Qty is limited for this item. Please Log in first."; __ClientResource["order_limit_alert_2"] = "Your order Qty exceed available Qty"; __ClientResource["order_limit_cnt"] = "{0} qty per person"; __ClientResource["orderqty"] = "order Qty."; __ClientResource["outofstock"] = "Sold Out"; __ClientResource["please select"] = "Please select."; __ClientResource["pm"] = "PM"; __ClientResource["processing negotiation"] = "Bargaining is processing..."; __ClientResource["promotion discount"] = "Promotion Discount"; __ClientResource["q-chance condition alert"] = "You do not have enough Q·stamps required."; __ClientResource["q-chance price"] = "Q·chance Price"; __ClientResource["qclub price"] = "Q-Club Price"; __ClientResource["qd_apply"] = "Apply"; __ClientResource["q-discount"] = "Q-Discount"; __ClientResource["q-discount price"] = "Q-Discount Price"; __ClientResource["qprime price"] = "Qprime Price"; __ClientResource["qtalk_qna_sending_msg"] = "There is an inquiry about the item(Item no : {0})."; __ClientResource["qty left"] = "{0}qty left"; __ClientResource["qty_script"] = "Qty"; __ClientResource["quantity"] = "Qty"; __ClientResource["quantitydeliveryfee_text_script"] = "Shipping rate will be added according to {0}."; __ClientResource["region_script"] = "Region"; __ClientResource["s1"] = "Unanswered"; __ClientResource["s2"] = "Processing"; __ClientResource["s3"] = "Answered"; __ClientResource["sale price"] = "Sale Price"; __ClientResource["sat"] = "Sat"; __ClientResource["second"] = "sec"; __ClientResource["seemore"] = "See More"; __ClientResource["seller can response"] = "* Language :  "; __ClientResource["seller delivery"] = "Seller Delivery"; __ClientResource["sending a qtalk message"] = "Live10 message is sending..."; __ClientResource["shipping fee"] = "Shipping rate"; __ClientResource["shipping will be available"] = "Ship out within {0} days after payment."; __ClientResource["shipping_detail_8_1"] = ""; __ClientResource["shipping_detail_oversea"] = "*Oversea"; __ClientResource["shipping_type"] = "Shipping Type"; __ClientResource["shippingratecl"] = "Shipping Rate"; __ClientResource["shippingregioncl"] = "Region"; __ClientResource["suc_sending_qtalk_msg"] = "Your inquiry has been sent successfully. Please check on Live10."; __ClientResource["successfully save"] = "Successfully added to wish list."; __ClientResource["sun"] = "Sun"; __ClientResource["thu"] = "Thu"; __ClientResource["time sale"] = "Time Sale"; __ClientResource["time sale price"] = "Time Sale Price"; __ClientResource["toast_alert_check_money"] = "Please check bargain price again."; __ClientResource["toast_alert_sent_message"] = "Bargain message have been sent to seller."; __ClientResource["topupchecklengthsg"] = "Numbers should be 8 digits."; __ClientResource["topupchecknumber"] = "Please put only numbers."; __ClientResource["tue"] = "Tue"; __ClientResource["unavailablecoupon"] = "My Coupon is not applicable to Time Sale/Daily deal/Q·chance discounted items."; __ClientResource["use my coupons"] = "Use My Coupons"; __ClientResource["valid period"] = "Valid Period"; __ClientResource["warranty 옵션을 설정 해 주세요."] = "Please select option(s) for warranty."; __ClientResource["wed"] = "Wed"; __ClientResource["weight_script"] = "Weight"; __ClientResource["weightcl"] = "Weight (Kg)"; __ClientResource["wishlayeradd"] = "Add"; __ClientResource["zh-cn"] = "Chinese"; __ClientResource["로그인해 주세요"] = "Sign in please."; __ClientResource["배송비 무료"] = "Free shipping over {0}"; __ClientResource["배송비 할인"] = "Save shipping rate over {0} purchase"; __ClientResource["신청함"] = "This item has been added to the Restock List."; __ClientResource["이미 이미 신청함"] = "This item has been added to the Restock List."; __ClientResource["현재 express에만 적용되는 쿠폰이 취소됩니다. 계속 하시겠습니까?"] = "The coupon which only applies to the express shipping will be cancelled, do you want to continue?"; __ClientResource["__master/dynamic__invalidvideourl"] = "This video cannot be played. "; __ClientResource["__master/defaultmasterpage.master__sign out"] = "Sign out"; __ClientResource["__master/defaultmasterpage.master__sign in"] = "Sign in"; __ClientResource["__master/defaultmasterpage.master__register"] = "Register"; __ClientResource["__master/defaultmasterpage.master__edit info"] = "Edit info"; __ClientResource["__master/defaultmasterpage.master__previewtitle"] = "<i class=\"ic_preview\"></i>Preview"; __ClientResource["__master/defaultmasterpage.master__reorderalert"] = "The selected item is added to the cart. Do you want to move to the cart?\r\n"; __ClientResource["__master/defaultmasterpage.master__confirm"] = "Confirm"; __ClientResource["__master/defaultmasterpage.master__cancel"] = "Cancel"; __ClientResource["__master/defaultmasterpage.master__pagetitle"] = "Qoo10 – shopping Fun and be Colorful"; __ClientResource["__master/defaultmasterpage.master__buy now"] = "Buy Now"; __ClientResource["__master/defaultmasterpage.master__max. bid"] = "Max. Bid"; __ClientResource["__master/defaultmasterpage.master__current"] = "Current"; __ClientResource["__control/goodsminishopbanner.ascx__alert_added"] = "Successfully added."; __ClientResource["__control/goodsminishopbanner.ascx__alert_already"] = "You have already added this seller shop."; __ClientResource["__control/goodsminishopbanner.ascx__alert_failed"] = "Sorry. Failed to add."; __ClientResource["__control/goodsminishopbanner.ascx__alert_login"] = "To add this seller shop, please sign in first."; __ClientResource["__control/goods/goodsleftinfo.ascx__alert_no_image_info"] = "There is no image information."; __ClientResource["__control/goods/goodsleftinfo.ascx__success add to wish"] = "Successfully added to your wish List, Do you want to see your Wish list?"; __ClientResource["__control/smart/optionallviewer.ascx__additionalprice"] = "Additional Price"; __ClientResource["__control/smart/optionallviewer.ascx__qty"] = "Qty"; __ClientResource["__control/smart/optionallviewer.ascx__soldout"] = "Sold Out"; __ClientResource["__control/smart/smartviewercontrol.ascx__additional off"] = "Additional Off"; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_01"] = "You input a wrong order Qty."; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_02"] = "Maximum Order Qty is 999 Qty"; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_03"] = "Minimum Order Qty is 1"; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_04"] = "Purchase/Discount Qty is limited for this item. Please Log in first."; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_05"] = "Your order Qty exceed available Qty"; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_06"] = "Please select options."; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_07"] = "Please enter options Info."; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_08"] = "Selected item has been successfully add to cart."; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_09"] = "Failed. Please try again."; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_10"] = "To Add to shopping cart, choose from options above."; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_11"] = "<em>Selected item has been added to cart. </em>"; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_12"] = "You input a wrong order Qty."; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_13"] = "Maximum Order Qty is 999 Qty"; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_14"] = "Minimum Order Qty is 1"; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_15"] = "There is already the same item in the cart."; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_16"] = "You can\'t change order quantity when discount coupon has already been applied."; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_17"] = "Edited."; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_18"] = "Failed"; __ClientResource["__control/smart/smartviewercontrol.ascx__alert_msg_19"] = "재고가 부족합니다."; __ClientResource["__control/smart/smartviewercontrol.ascx__discounted price"] = "Discounted Price"; __ClientResource["__control/smart/smartviewercontrol.ascx__free"] = "Free"; __ClientResource["__control/smart/smartviewercontrol.ascx__grouppricetooltip"] = "Group Buy Price"; __ClientResource["__control/smart/smartviewercontrol.ascx__off"] = "off"; __ClientResource["__control/smart/smartviewercontrol.ascx__outofstock"] = "Sold Out"; __ClientResource["__control/smart/smartviewercontrol.ascx__please select"] = "Please select."; __ClientResource["__control/smart/smartviewercontrol.ascx__price_script"] = "Price"; __ClientResource["__control/smart/smartviewercontrol.ascx__qty"] = "Qty"; __ClientResource["__control/smart/smartviewercontrol.ascx__qty2"] = "Qty"; __ClientResource["__control/smart/smartviewercontrol.ascx__remove"] = "Remove"; __ClientResource["__control/smart/smartviewercontrol.ascx__retail price"] = "Retail Price"; __ClientResource["__control/smart/smartviewercontrol.ascx__saved shipping rate"] = "You saved <strong> {0} </strong> in shipping rate."; __ClientResource["__control/goods/goodsqainfo.ascx__{0} days left"] = "{0} days left"; __ClientResource["__control/goods/goodsqainfo.ascx__{0} hours left"] = "{0} hours left"; __ClientResource["__control/goods/goodsqainfo.ascx__{0} min left"] = "{0} min left"; __ClientResource["__control/goods/goodsqainfo.ascx__all"] = "All"; __ClientResource["__control/goods/goodsqainfo.ascx__am"] = "AM"; __ClientResource["__control/goods/goodsqainfo.ascx__available"] = "Available"; __ClientResource["__control/goods/goodsqainfo.ascx__available_alltime"] = "Available : Alltime"; __ClientResource["__control/goods/goodsqainfo.ascx__available_during"] = "Available during"; __ClientResource["__control/goods/goodsqainfo.ascx__checkdetailqtalk"] = "Seller sent you contents message. Please check your Qpost(Qbox > Qpost >My Inquiry)."; __ClientResource["__control/goods/goodsqainfo.ascx__checkdetailqtalk_client"] = "Seller sent you contents message. Please check your Qpost(Qbox > Qpost >My Inquiry)."; __ClientResource["__control/goods/goodsqainfo.ascx__click to call"] = "Click to call"; __ClientResource["__control/goods/goodsqainfo.ascx__contact"] = "Contacts:"; __ClientResource["__control/goods/goodsqainfo.ascx__edit"] = "Edit"; __ClientResource["__control/goods/goodsqainfo.ascx__edit_client"] = "Edit"; __ClientResource["__control/goods/goodsqainfo.ascx__email"] = "Email:"; __ClientResource["__control/goods/goodsqainfo.ascx__en"] = "English"; __ClientResource["__control/goods/goodsqainfo.ascx__exclude"] = "Exclude"; __ClientResource["__control/goods/goodsqainfo.ascx__faq"] = "FAQ"; __ClientResource["__control/goods/goodsqainfo.ascx__fold"] = "fold"; __ClientResource["__control/goods/goodsqainfo.ascx__fri"] = "Fri"; __ClientResource["__control/goods/goodsqainfo.ascx__inquiry to the seller"] = "Inquiry to Seller"; __ClientResource["__control/goods/goodsqainfo.ascx__item q&a"] = "Item Q&A"; __ClientResource["__control/goods/goodsqainfo.ascx__ja"] = "Japanese"; __ClientResource["__control/goods/goodsqainfo.ascx__ko"] = "Korean"; __ClientResource["__control/goods/goodsqainfo.ascx__live help"] = "Live Desk"; __ClientResource["__control/goods/goodsqainfo.ascx__mon"] = "Mon"; __ClientResource["__control/goods/goodsqainfo.ascx__my inquiry"] = "My Inquiry"; __ClientResource["__control/goods/goodsqainfo.ascx__my inquiry_client"] = "My Inquiry"; __ClientResource["__control/goods/goodsqainfo.ascx__notice"] = "Notice"; __ClientResource["__control/goods/goodsqainfo.ascx__pm"] = "PM"; __ClientResource["__control/goods/goodsqainfo.ascx__popular auctions"] = "Popular auctions to bid on"; __ClientResource["__control/goods/goodsqainfo.ascx__qna_board_inquiry"] = "Q&A Board Inquiry"; __ClientResource["__control/goods/goodsqainfo.ascx__re inquiry"] = "Further Enquiry >"; __ClientResource["__control/goods/goodsqainfo.ascx__re inquiry_client"] = "Further Enquiry >"; __ClientResource["__control/goods/goodsqainfo.ascx__real_time_qtalk_qna"] = "Inquiry on Q&A board"; __ClientResource["__control/goods/goodsqainfo.ascx__s1"] = "Unanswered"; __ClientResource["__control/goods/goodsqainfo.ascx__s1_svr"] = "Unanswered"; __ClientResource["__control/goods/goodsqainfo.ascx__s2"] = "Processing"; __ClientResource["__control/goods/goodsqainfo.ascx__s2_svr"] = "Processing"; __ClientResource["__control/goods/goodsqainfo.ascx__s3"] = "Answered"; __ClientResource["__control/goods/goodsqainfo.ascx__s3_svr"] = "Answered"; __ClientResource["__control/goods/goodsqainfo.ascx__sat"] = "Sat"; __ClientResource["__control/goods/goodsqainfo.ascx__secret inquiry"] = "Private Enquiry"; __ClientResource["__control/goods/goodsqainfo.ascx__secret inquiry_client"] = "Private Enquiry"; __ClientResource["__control/goods/goodsqainfo.ascx__seller can response"] = "* Language :  "; __ClientResource["__control/goods/goodsqainfo.ascx__show all_client"] = "Show All"; __ClientResource["__control/goods/goodsqainfo.ascx__show my list"] = "Show My List"; __ClientResource["__control/goods/goodsqainfo.ascx__show my list_client"] = "Show My List"; __ClientResource["__control/goods/goodsqainfo.ascx__sun"] = "Sun"; __ClientResource["__control/goods/goodsqainfo.ascx__thu"] = "Thu"; __ClientResource["__control/goods/goodsqainfo.ascx__tue"] = "Tue"; __ClientResource["__control/goods/goodsqainfo.ascx__unfold"] = "Unfold"; __ClientResource["__control/goods/goodsqainfo.ascx__wed"] = "Wed"; __ClientResource["__control/goods/goodsqainfo.ascx__zh-cn"] = "Chinese"; __ClientResource["__control/goods/goodsqainfo.ascx__문의 방법을 선택해 주세요"] = "Please choose your preferred method of contact"; __ClientResource["__control/goods/goodsqainfo.ascx__문의하기"] = "Ask Question"; __ClientResource["__master/defaultmasterpage.master__buy now"] = "Buy Now"; __ClientResource["__master/defaultmasterpage.master__chromebookmark"] = "Please click OK, then press <Ctrl-D> to bookmark this page."; __ClientResource["__master/defaultmasterpage.master__click to play video"] = "Click to Play Video"; __ClientResource["__master/defaultmasterpage.master__ex_script"] = "Express"; __ClientResource["__master/defaultmasterpage.master__full image"] = "Full Image"; __ClientResource["__master/defaultmasterpage.master__image_cancel"] = "Cancel"; __ClientResource["__master/defaultmasterpage.master__image_search"] = "Crop image and Search "; __ClientResource["__master/defaultmasterpage.master__max. bid"] = "Max. Bid"; __ClientResource["__master/defaultmasterpage.master__no_script"] = "Non-registered Mail"; __ClientResource["__master/defaultmasterpage.master__previewtitle"] = "<i class=\"ic_preview\"></i>Preview"; __ClientResource["__master/defaultmasterpage.master__recommends"] = "Recommends!"; __ClientResource["__master/defaultmasterpage.master__reorderalert"] = "The selected item is added to the cart. Do you want to move to the cart?\r\n"; __ClientResource["__master/defaultmasterpage.master__rm_script"] = "Standard"; __ClientResource["__master/defaultmasterpage.master__search"] = "Search"; __ClientResource["__master/defaultmasterpage.master__sell price"] = "Sell Price"; __ClientResource["__master/defaultmasterpage.master__shipping fee"] = "Shipping : {0}"; __ClientResource["__master/defaultmasterpage.master__shipping from"] = "Shipping From"; __ClientResource["__master/defaultmasterpage.master__stop flash"] = "Stop Flash"; __ClientResource["__master/defaultmasterpage.master__tc_script"] = "Registered mail"; __ClientResource["__master/defaultmasterpage.master__time sale"] = "Time Sale"; __ClientResource["__master/defaultmasterpage.master__todays view"] = "Today\'s View"; __ClientResource["__master/defaultmasterpage.master__recommends"] = "Recommends!"; __ClientResource["__master/defaultmasterpage.master__todays view"] = "Today\'s View"; __ClientResource["__control/searchresult.ascx__clicked"] = "Clicked Item"; __ClientResource["__control/searchresult.ascx__lastvieweditem"] = "Last Viewed Item"; __ClientResource["__master/basemasterpage.master__day"] = " Day"; __ClientResource["__master/basemasterpage.master__days"] = " Days"; __ClientResource["__control/minishop/goodsminishopbar.ascx__{0} items on sale"] = "<em>{0}</em> items on sale"; __ClientResource["__control/minishop/goodsminishopbar.ascx__alert_added"] = "This seller shop is added to my following shop successfully."; __ClientResource["__control/minishop/goodsminishopbar.ascx__alert_already"] = "You have already added this seller shop."; __ClientResource["__control/minishop/goodsminishopbar.ascx__alert_failed"] = "Sorry. Failed to add."; __ClientResource["__control/minishop/goodsminishopbar.ascx__alert_login"] = "To add this seller shop, please sign in first."; __ClientResource["__control/smart/optionallviewer.ascx__additionalprice"] = "Additional Price"; __ClientResource["__control/smart/optionallviewer.ascx__qty"] = "Qty"; __ClientResource["__control/smart/optionallviewer.ascx__soldout"] = "Sold Out";
        var PriceUtil = function(){}; PriceUtil.FormatCurrency = function(money){var sign, cents, roundFloat, groupSeparator; roundFloat = 0.50000000001; var nation = GMKT.ServiceInfo.nation; money = money.toString().replace(/\$|\,/g, ''); if (isNaN(money)){money = "0"; }; sign = (money == (money = Math.abs(money))); money = Math.floor(money * 100 + roundFloat); groupSeparator = ","; if (nation == "ID" && GMKT.ServiceInfo.currencyGroupSeperator != ",")groupSeparator = GMKT.ServiceInfo.currencyGroupSeperator; cents = money % 100; money = Math.floor(money / 100).toString(); if (cents < 10){cents = "0" + cents; }; for (var i = 0; i < Math.floor((money.length - (1 + i)) / 3); i++){money = money.substring(0, money.length - (4 * i + 3)) + groupSeparator + money.substring(money.length - (4 * i + 3)); }; if (GMKT.ServiceInfo.nation == "JP" || GMKT.ServiceInfo.nation == "ID"){return(((sign)?'':'-') + money); } else if (GMKT.ServiceInfo.nation == "MY" || GMKT.ServiceInfo.nation == "CN"){if (cents == 0){return(((sign)?'':'-') + money); } else{return(((sign)?'':'-') + money + "." + cents); }; } else{return(((sign)?'':'-') + money + "." + cents); }; }; PriceUtil.FormatCurrencySymbol = function(money){return this.FormatCurrencyRegionSymbol(money); }; PriceUtil.FormatCurrencyRegionSymbol = function(money){var money = this.FormatCurrency(money); if (GMKT.ServiceInfo.region == "JP" || GMKT.ServiceInfo.region == "CN"){return money + GMKT.ServiceInfo.currency; } else if (GMKT.ServiceInfo.region == "HK"){return((money.indexOf("-") >= 0)?'-':'') + "HK$" + money.replace('-', ''); } else if (GMKT.ServiceInfo.region == "MY"){return((money.indexOf("-") >= 0)?'-':'') + "RM" + money.replace('-', ''); } else if (GMKT.ServiceInfo.region == "ID"){return((money.indexOf("-") >= 0)?'-':'') + money.replace('-', ''); }
else{return((money.indexOf("-") >= 0)?'-':'') + GMKT.ServiceInfo.currency + money.replace('-', ''); }; return money; }; PriceUtil.FormatCurrencyCode = function(money, currency_code){var d_svc_nation = {"SGD":"$", "SGD-HUB":"S$", "JPY":"å††", "MYR":"RM ", "IDR":"", "IDR-HUB":"Rp", "KRW":"ì›", "USD":"US$", "CNY":"å…ƒ", "HKD":"HK$", "RMB":"å…ƒ", "PHP":"P", "TWD":"NT$", "ETH":"ETH"}; var multiplayer = currency_code == "ETH"?10000:100; var currency_code_check = currency_code; if (GMKT.ServiceInfo.region == "US" && (currency_code == "SGD" || currency_code == "IDR"))
        currency_code_check += "-HUB"; var currency = ""; for (var key in d_svc_nation){if (key == currency_code_check){currency = d_svc_nation[key]; }; }; var sign, cents, roundFloat, groupSeparator; roundFloat = 0.50000000001; if (currency_code == "IDR")
        money = money.toString().replace(/\$|\,\./g, ''); else
        money = money.toString().replace(/\$|\,/g, ''); if (isNaN(money)){money = "0"; }; sign = (money == (money = Math.abs(money))); money = PriceUtil.FormatNumberCode(PriceUtil.PriceCuttingCode(money, currency_code), currency_code); var disp_money = ""; if (currency_code == "TWD" || currency_code == "MYR"){disp_money = currency + (((sign)?'':'-') + money); } else if (currency_code == "ETH" || currency_code == "JPY" || currency_code == "KRW" || currency_code == "RMB" || currency_code == "CNY"){disp_money = (((sign)?'':'-') + money) + currency; }
else{disp_money = (((sign)?'':'-') + currency + money); }; return disp_money; }; PriceUtil.FormatNumber = function(value){var nation = GMKT.ServiceInfo.nation; if (nation == "ID" && GMKT.ServiceInfo.currencyGroupSeperator != ","){var groupSeparator = "."; value = value.toString().replace(/\$|\,|\./g, ''); for (var i = 0; i < Math.floor((value.length - (1 + i)) / 3); i++){value = value.substring(0, value.length - (4 * i + 3)) + groupSeparator + value.substring(value.length - (4 * i + 3)); }; }
else{var groupSeparator = ","; value = value.toString().replace(/\$|\,/g, ''); for (var i = 0; i < Math.floor((value.length - (1 + i)) / 3); i++){value = value.substring(0, value.length - (4 * i + 3)) + groupSeparator + value.substring(value.length - (4 * i + 3)); }; }
return value; }; PriceUtil.FormatNumberCode = function(value, currency_code){if (currency_code == "IDR" && GMKT.ServiceInfo.currencyGroupSeperator != ","){var groupSeparator = "."; value = value.toString().replace(/\$|\,|\./g, ''); for (var i = 0; i < Math.floor((value.length - (1 + i)) / 3); i++){value = value.substring(0, value.length - (4 * i + 3)) + groupSeparator + value.substring(value.length - (4 * i + 3)); }; }
else{var groupSeparator = ","; value = value.toString().replace(/\$|\,/g, ''); var cents = ""; if (value.lastIndexOf(".") >= 0)
{cents = value.substr(value.lastIndexOf(".")); value = value.substr(0, value.lastIndexOf(".")); }
for (var i = 0; i < Math.floor((value.length - (1 + i)) / 3); i++){value = value.substring(0, value.length - (4 * i + 3)) + groupSeparator + value.substring(value.length - (4 * i + 3)); }; value += cents; if ((currency_code == "MYR" || currency_code == "RMB" || currency_code == "CNY") && value.indexOf(".00") > 0)
{value = value.replace(".00", ""); }}
return value; }; PriceUtil.PriceCuttingService = function(value, nation){var format = GMKT.ServiceInfo.money_format; var digits; var rtnTmp; value = Number(value); if (nation == "ID"){digits = - 1; } else if (format.indexOf(".") == - 1){digits = 0; } else{digits = format.substr(format.indexOf(".") + 1, format.length).length; }; if (digits < 0 || value < 1){rtnTmp = PriceUtil.Round(value, digits); } else{rtnTmp = value.toFixed(digits); }; return rtnTmp; }; PriceUtil.PriceCuttingCode = function(value, currency){var digits; var rtnTmp; if (currency == undefined){currency = GMKT.ServiceInfo.currencyCode; }; value = Number(value); if (currency == "IDR"){digits = - 1; } else if (currency == "SGD" || currency == "MYR" || currency == "USD" || currency == "CNY" || currency == "HKD" || currency == "RMB"){digits = 2; }
else if (currency == "ETH"){digits = 5}
else{digits = 0; }; if (digits < 0 || value < 1){rtnTmp = PriceUtil.Round(value, digits); } else{rtnTmp = value.toFixed(digits); }; return rtnTmp; }; PriceUtil.PriceCutting2Currency = function(price, currency_cd, nStyle){var cutVal = 1; var cutPo = 1; var cutcount = 0; if (currency_cd == ""){currency_cd = GMKT.ServiceInfo.viewCurrencyCode; }; if (currency_cd == "IDR" || currency_cd == "KRW"){if (nStyle == 0){return Math.round(price / 100, 0) * 100; } else if (nStyle == 1){price = (price / 100); return Math.round(price - cutVal * 0.5, 0) * 100; } else{price = (price / 100); return Math.round(price + cutVal * 0.5, 0) * 100; }} else{if (currency_cd == "SGD" || currency_cd == "MYR" || currency_cd == "USD" || currency_cd == "CNY" || currency_cd == "HKD"){cutcount = 1; }; for (i = 0; i < cutcount; i++){cutVal /= 10; cutPo *= 10}; if (nStyle == 0){return Math.round(price * cutPo, cutcount) / cutPo; } else if (nStyle == 1){return Math.round((price - cutVal * 0.5) * cutPo, cutcount) / cutPo; } else{return Math.round((price + cutVal * 0.5) * cutPo, cutcount) / cutPo; }}; }; PriceUtil.Round = function(valuenum, digits){var sourceDouble = valuenum; return Math.round(sourceDouble * Math.pow(10, digits)) / Math.pow(10, digits); }; PriceUtil.PriceCutting = function(value){var nation = GMKT.ServiceInfo.nation; return PriceUtil.PriceCuttingService(value, nation); }; PriceUtil.GetMoney = function(money){var nation = GMKT.ServiceInfo.nation; if (nation == "ID" && GMKT.ServiceInfo.currencyGroupSeperator != ",")
        money = money.toString().replace(/\S\$|RM|Rp|\$|\US\$|\NT\$|\HK\$|\å…ƒ|\,|\./g, ''); else
        money = money.toString().replace(/\S\$|RM|Rp|\$|\US\$|\NT\$|\HK\$|\å…ƒ|\,/g, ''); return parseFloat(money); }; PriceUtil.ChangeFormatToNum = function(sValue){if (nation == "ID")
        return sValue.toString().replace(/\$|\,\./g, ''); else
        return sValue.toString().replace(/\$|\,/g, ''); }; PriceUtil.AddCurrencySymbol = function(amt, currency){if (currency == undefined){currency = PriceUtil.GetCurrencySymbol(); }; if (currency == 'ì›' || currency == 'å††' || currency == 'å…ƒ'){return amt + currency; } else{return currency + amt; }; }; PriceUtil.GetNationCurrency = function(svc_nation_cd){var d_svc_nation = {"SG":"SGD", "JP":"JPY", "MY":"MYR", "ID":"IDR", "KR":"KRW", "US":"USD", "CN":"CNY", "HK":"HKD", "RM":"RMB"}; var currency = ""; for (var key in d_svc_nation){if (key == svc_nation_cd){currency = d_svc_nation[key]; }; }; return currency; }; PriceUtil.GetCurrencySymbol = function(currency_cd){if (currency_cd == undefined){currency_cd = GMKT.ServiceInfo.viewCurrencyCode; }; var d_svc_nation = {"SGD":"S$", "JPY":"å††", "MYR":"RM", "IDR":"Rp", "KRW":"ì›", "USD":"US$", "CNY":"å…ƒ", "HKD":"HK$", "RMB":"å…ƒ", "PHP":"P", "TWD":"NT$"}; var currency = ""; for (var key in d_svc_nation){if (key == currency_cd){currency = d_svc_nation[key]; }; }; return currency; }; PriceUtil.CurrencyConvertForSquare = function(amt, svc_nation_cd){var currency_converter = 0; if (svc_nation_cd == "JP"){currency_converter = 100; } else if (svc_nation_cd == "ID"){currency_converter = 10000; } else if (svc_nation_cd == "CN"){currency_converter = 5; } else if (svc_nation_cd == "HK"){currency_converter = 5; } else if (svc_nation_cd == "MY"){currency_converter = 3; } else{currency_converter = 1; }; return(amt * currency_converter); }; PriceUtil.ChangeFromVCoin = function(dCoin, ch_type){if (ch_type == "ETH"){dCoin = Number((dCoin * 1000000).toFixed(4)); }
return dCoin; }; PriceUtil.ChangeToVCoin = function(dCoin, ch_type){if (ch_type == "ETH")
{dCoin = Number((dCoin * 0.000001).toFixed(10)); }
return dCoin; };
// (c)2013 Giosis Group

        if (typeof GMKT == "undefined"){var GMKT = GMKT || {}; }; var oldToggle = jQuery.fn.toggle; jQuery.fn.toggle = function(fn, fn2){if (!jQuery.isFunction(fn) || !jQuery.isFunction(fn2)){return oldToggle.apply(this, arguments); }; var args = arguments, guid = fn.guid || jQuery.guid++, i = 0, toggler = function(event){var lastToggle = (jQuery._data(this, "lastToggle" + fn.guid) || 0) % i; jQuery._data(this, "lastToggle" + fn.guid, lastToggle + 1); event.preventDefault(); return args[lastToggle].apply(this, arguments) || false; }; toggler.guid = guid; while (i < args.length){args[i++].guid = guid; }; return this.click(toggler); }; (function($){$.fn.tinyscrollbar = function(options){var defaults = {axis:'y', wheel:40, scroll:true, size:'auto', sizethumb:'auto'}; var options = $.extend(defaults, options); var oWrapper = $(this); var oViewport = {obj:$('.viewport', this)}; var oContent = {obj:$('.overview', this)}; var oScrollbar = {obj:$('.scrollbar', this)}; var oTrack = {obj:$('.track', oScrollbar.obj)}; var oThumb = {obj:$('.thumb', oScrollbar.obj)}; var sAxis = options.axis == 'x', sDirection = sAxis?'left':'top', sSize = sAxis?'Width':'Height'; var iScroll, iPosition = {start:0, now:0}, iMouse = {}; if (this.length > 1){this.each(function(){$(this).tinyscrollbar(options)}); return this; }; this.initialize = function(){this.update(); setEvents(); }; this.update = function(){iScroll = 0; oViewport[options.axis] = oViewport.obj[0]['offset' + sSize]; oContent[options.axis] = oContent.obj[0]['scroll' + sSize]; oContent.ratio = oViewport[options.axis] / oContent[options.axis]; oScrollbar.obj.toggleClass('disable', oContent.ratio >= 1); oTrack[options.axis] = options.size == 'auto'?oViewport[options.axis]:options.size; oThumb[options.axis] = Math.min(oTrack[options.axis], Math.max(0, (options.sizethumb == 'auto'?(oTrack[options.axis] * oContent.ratio):options.sizethumb))); oScrollbar.ratio = options.sizethumb == 'auto'?(oContent[options.axis] / oTrack[options.axis]):(oContent[options.axis] - oViewport[options.axis]) / (oTrack[options.axis] - oThumb[options.axis]); setSize(); }; function setSize(){oContent.obj.removeAttr('style'); oThumb.obj.removeAttr('style'); iMouse['start'] = oThumb.obj.offset()[sDirection]; var sCssSize = sSize.toLowerCase(); oScrollbar.obj.css(sCssSize, oTrack[options.axis]); oTrack.obj.css(sCssSize, oTrack[options.axis]); oThumb.obj.css(sCssSize, oThumb[options.axis]); }; function setEvents(){oThumb.obj.bind('mousedown', start); oTrack.obj.bind('mouseup', drag); if (options.scroll && this.addEventListener){oWrapper[0].addEventListener('DOMMouseScroll', wheel, false); oWrapper[0].addEventListener('mousewheel', wheel, false); } else if (options.scroll){oWrapper[0].onmousewheel = wheel; }; }; function start(oEvent){iMouse.start = sAxis?oEvent.pageX:oEvent.pageY; iPosition.start = parseInt(oThumb.obj.css(sDirection)); $(document).bind('mousemove', drag); $(document).bind('mouseup', end); oThumb.obj.bind('mouseup', end); return false; }; function wheel(oEvent){if (!(oContent.ratio >= 1)){oEvent = $.event.fix(oEvent || window.event); var iDelta = oEvent.wheelDelta?oEvent.wheelDelta / 120: - oEvent.detail / 3; iScroll -= iDelta * options.wheel; iScroll = Math.min((oContent[options.axis] - oViewport[options.axis]), Math.max(0, iScroll)); oThumb.obj.css(sDirection, iScroll / oScrollbar.ratio); oContent.obj.css(sDirection, - iScroll); oEvent.preventDefault(); }; }; function end(oEvent){$(document).unbind('mousemove', drag); $(document).unbind('mouseup', end); oThumb.obj.unbind('mouseup', end); return false; }; function drag(oEvent){if (!(oContent.ratio >= 1)){iPosition.now = Math.min((oTrack[options.axis] - oThumb[options.axis]), Math.max(0, (iPosition.start + ((sAxis?oEvent.pageX:oEvent.pageY) - iMouse.start)))); iScroll = iPosition.now * oScrollbar.ratio; oContent.obj.css(sDirection, - iScroll); oThumb.obj.css(sDirection, iPosition.now); ; }; return false; }; return this.initialize(); }; })(jQuery); function $get(element){return document.getElementById(element); }; function $sget(element){return document.getElementById(__ServerControl[element]); }; function $nget(element){return document.getElementsByName(element); }; String.prototype.trim = function(){return this.replace(/(^\s*)|(\s*$)|($\s*)/g, ""); }; String.prototype.ltrim = function(){return this.replace(/^\s+/, ""); }; String.prototype.rtrim = function(){return this.replace(/\s+$/, ""); }; String.prototype.startsWith = function(str){return this.indexOf(str) == 0; }; String.prototype.ToCuttingLength = function(m){return(this.length > m)?this.slice(0, m) + " ...":this; }; String.format = function(text){if (arguments.length <= 1){return text; }; var tokenCount = arguments.length - 2; for (var token = 0; token <= tokenCount; token++){text = text.replace(new RegExp("\\{" + token + "\\}", "gi"), arguments[token + 1].toString().replace(/\$0/, "$$$$0")); }; return text; }; var isCurrent = true; var Public = function(){}; var userAgent = navigator.userAgent.toLowerCase(); Public.browser = {version:(userAgent.match(/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/) || [0, '0'])[1], version2:(userAgent.match(/(?:rv|it|ra|ie)[\/: ]([\d.]+)/) || [0, '0'])[1], safari:/webkit/.test(userAgent), opera:/opera/.test(userAgent), msie:/msie/.test(userAgent) && !/opera/.test(userAgent), mozilla:/mozilla/.test(userAgent) && !/(compatible|webkit)/.test(userAgent)}; if (!Public.browser.msie && window.navigator.userAgent.toLowerCase().indexOf("trident") >= 0 && window.navigator.userAgent.toLowerCase().indexOf("rv:11.0") >= 0){Public.browser.msie = true; Public.browser.mozilla = undefined; }; Public.isPushSupportChromeBrowser = function(){if (/Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor) && window.navigator.userAgent.toLowerCase().indexOf("samsungbrowser") == - 1){var raw = navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./); if (raw?parseInt(raw[2], 10):0 > 40){if (window.navigator.userAgent.indexOf("iPhone OS") >= 0 || window.navigator.userAgent.indexOf("iPad; CPU OS") >= 0){return false; } else{return true; }; } else{return false; }; } else{return false; }; }; Public.isCurrentPageHistoryBack = function(){var history_back_check = $("#__history_back_check").val(); if (history_back_check == "no"){$("#__history_back_check").val("yes"); }; return history_back_check == "yes"; }; Public.ErrorHandler = function(ex, url, line, col, error){var funcname = ""; if (typeof (ex) != "string"){if (ex.message != undefined){ex = ex.message; } else if (ex.ExceptionType != undefined){ex = ex.Message; } else{ex = "unknown script error"; }; }; if (Public.ErrorHandler.caller != null){try{funcname = Public.ErrorHandler.caller.toString(); funcname = funcname.replace("function", ""); funcname = funcname.replace(/(^\s*)|(\s*$)|($\s*)/g, ""); var idx = funcname.indexOf(")"); if (idx >= 0){funcname = funcname.substring(0, idx + 1); } else{funcname = funcname.substring(0, 25); }; } catch (e){}; }; var body = ""; try{body = "ColNo. : " + col + "\r\n"; if (error !== null && error !== undefined){body += "Stack : " + error.stack + "\r\n"; } else{body += "Stack : null\r\n"; }; body += "Source : \r\n"; body += document.documentElement.innerHTML; } catch (e){body = e.message; }; Public.WriteScriptError(ex, url, funcname, line, "Error", body); return false; }; Public.__errorCount = 0; Public.WriteScriptError = function(ex, url, funcname, line, logType, body){try{var serverName = ""; var serverIP = ""; var clientIP = ""; var trueClientIP = ""; var clientCDNIP = ""; var login_id = ""; var lang = ""; var app_no = 1; if (++Public.__errorCount > 2){return; }; try{if (line == null || line == "" || parseInt(line) <= 1){return; }; if (url != "" && !(url.indexOf("http") == 0 && (url.indexOf("qoo10.") > - 1 || url.indexOf("m18.") > - 1))){return; }; if (funcname && (window.navigator.userAgent.indexOf("Chrome") >= 0 && funcname.indexOf("Timer") >= 0)){return; }; if (ex.indexOf("Unable to get property 'jQuery") >= 0 || ex.indexOf("Uncaught TypeError: Cannot read property 'jQuery") >= 0 || ex.indexOf("Uncaught Error: SYNTAX_ERR: DOM Exception 12") >= 0 || ex.indexOf("NETWORK_ERR: XMLHttpRequest Exception 101") >= 0){return; }; if ((window.navigator.userAgent.indexOf("iPhone OS") >= 0 || window.navigator.userAgent.indexOf("iPad; CPU OS") >= 0) && (ex == "TypeError: 'undefined' is not a function" || ex == "TypeError: 'null' is not an object")){return; }; if (window.navigator.userAgent.indexOf("Firefox") >= 0 && ex != null && (ex.indexOf("Permission denied to access property") >= 0 || ex == "ReferenceError: Components is not defined" || ex == "TypeError: k[l] is undefined")){return; }; if (window.navigator.userAgent.indexOf("Googlebot") >= 0){return; }; if (ex.indexOf("window.giosis.iphone") >= 0){return; }; if (window.navigator.userAgent.indexOf("Mac OS X") >= 0 && ex.indexOf("ReferenceError: Can't find variable") >= 0){return; }; if (ex == "Script error."){return; }; if (funcname == "_watcherReady()"){return; }; if (ex.indexOf("SecurityError (DOM Exception 18)") >= 0 && window.navigator.userAgent.indexOf("CriOS") >= 0){return; }; serverName = __PAGE_VALUE.SERVER_NAME; serverIP = __PAGE_VALUE.SERVER_IP; clientIP = __PAGE_VALUE.CLIENT_IP; trueClientIP = __PAGE_VALUE.TRUE_CLIENT_IP; clientCDNIP = __PAGE_VALUE.CLIENT_CDN_IP; login_id = __PAGE_VALUE.IS_LOGIN?__PAGE_VALUE.LOGIN_ID:""; lang = GMKT.ServiceInfo.ClientLang; app_no = __PAGE_VALUE.APP_NO; if (!Util.isNumber(app_no)){app_no = 1; }; } catch (ex1){}; var detailmessage = "Referer : " + document.referrer + "\r\n"; detailmessage += "User Language : " + lang + "\r\n"; detailmessage += "Client IP : " + clientIP + "\r\n"; detailmessage += "TRUE Client IP : " + trueClientIP + "\r\n"; detailmessage += "Client CDN IP : " + clientCDNIP + "\r\n"; detailmessage += "User Agent : " + window.navigator.userAgent + "\r\n"; detailmessage += "Login ID : " + login_id + "\r\n"; detailmessage += "Domain : " + document.domain + "\r\n"; detailmessage += "Server Name : " + serverName + "\r\n"; detailmessage += "Server IP : " + serverIP + "\r\n"; detailmessage += "Error File : " + url + "\r\n"; detailmessage += "Error Function : " + funcname + "\r\n"; detailmessage += "Error Line : " + line + "\r\n"; if (Public.getPageNo()){detailmessage += "Page No : " + Public.getPageNo() + "\r\n"; }; try{var condt = new Date(GMKT.ServiceInfo.ServerTime); var nowdt = new Date(); condt.setSeconds(condt.getSeconds() + 5); detailmessage += "Connect Time : " + GMKT.ServiceInfo.ServerTime + "\r\n"; } catch (ex3){detailmessage += "Connect Time : "; }; detailmessage += "Error Message : " + ex + "\r\n"; var mobileAppLogging = detailmessage; if (body){detailmessage += body; }; try{if (window.console && window.console.log){window.console.log(detailmessage); }; } catch (ex2){}; var param = new RMSParam(); param.add("logType", !logType?"Error":logType); param.add("contexturl", window.location.href); param.add("useragent", window.navigator.userAgent); param.add("server", serverName); param.add("appNo", app_no); param.add("location", funcname); param.add("message", ex); param.add("detailmessage", detailmessage); param.add("page_no", Public.getPageNo()?Public.getPageNo():"0"); var callback = function(result, svc, methodName, xmlHttpasync){}; RMSHelper.asyncCallWebMethod(Public.getServiceUrl("swe_AjaxLoggingService.asmx"), "WriteLog", param.toJson(), callback); if (window.giosis && window.giosis.onJavascriptError){window.giosis.onJavascriptError(mobileAppLogging); }; } catch (ex){}; }; window.onerror = Public.ErrorHandler; function onViewAppInitPage(){window.setTimeout(function(){writeClientSidePageAccessLog(); }, 1000); }; var __writeClientSidePageAccessLogFlag = false; function writeClientSidePageAccessLog(){try{if (!__writeClientSidePageAccessLogFlag && Public.getPageContextId() != "" && location.href.indexOf(Public.getImgPath()) === - 1 && !Public.isCurrentPageHistoryBack()){__writeClientSidePageAccessLogFlag = true; var param = new RMSParam(); param.add("page_no", Public.getPageNo()); param.add("psc_url", document.location.href); param.add("ref_url", document.referrer); param.add("page_context_id", Public.getPageContextId()); RMSHelper.asyncCallWebMethod(Public.getServiceUrl("swe_AjaxLoggingService.asmx"), "WritePageLog", param.toJson(true), function(result, svc, methodName, xmlHttpasync){}, true); }; } catch (ex){}; }; Public.isLocalServer = function(){if (__PAGE_VALUE.IS_LOCAL_SERVER || window.location.href.indexOf("localhost") >= 0){return true; }; return false; }; Public.isLocalServerOrg = function(){if (__PAGE_VALUE.IS_LOCAL_SERVER_ORG || window.location.href.indexOf("localhost") >= 0){return true; }; return false; }; Public.isDev = function(){return Public.isLocalServer(); }; Public.isReal = function(){return!Public.isDev(); }; Public.getAppPath = function(){return __PAGE_VALUE.ROOT_PATH; }; Public.getEventAppPath = function(){return __PAGE_VALUE.EVENT_ROOT_PATH; }; Public.getOpenApiAppPath = function(){return __PAGE_VALUE.OPENAPI_PATH; }; Public.getServicePath = function(){return __PAGE_VALUE.SERVICE_PATH; }; Public.getCookieDomain = function(){return __PAGE_VALUE.COOKE_DOMAIN; }; Public.isLogin = function(){if (GMKT && GMKT.ServiceInfo && GMKT.ServiceInfo.LoginCookieName){var loginCookie = Util.getCookie(GMKT.ServiceInfo.LoginCookieName); if (loginCookie && loginCookie != ""){return true; }; return false; }; return false; }; Public.getCustNo = function(){return Public.isLogin()?__PAGE_VALUE.CUST_NO:""; }; Public.getLoginId = function(){return Public.isLogin()?__PAGE_VALUE.LOGIN_ID:""; }; Public.isAdult = function(){if (__PAGE_VALUE.IS_ADULT != undefined && __PAGE_VALUE.IS_ADULT == true){return __PAGE_VALUE.IS_ADULT; }; return false; }; Public.getMemberKind = function(){return Public.isLogin()?__PAGE_VALUE.MEMBER_KIND:""; }; Public.getQstoreCustNo = function(){if (__PAGE_VALUE.QSTORE_SELLER_CUST_NO != undefined && __PAGE_VALUE.QSTORE_SELLER_CUST_NO != ""){return __PAGE_VALUE.QSTORE_SELLER_CUST_NO; } else{return""; }; }; Public.getServiceUrl = function(serviceName){return Public.getServicePath() + serviceName; }; Public.convertNormalUrl = function(path){if (path.substr(0, 1) == "~"){return Public.getAppPath() + path.substr(1, path.length - 1)} else if (path.indexOf("/") != 0){var idx = window.location.pathname.lastIndexOf('/'); if (idx >= 0){return window.location.pathname.substring(0, idx + 1) + path; }; }; return Public.getAppPath() + path; }; Public.convertNormalFullUrl = function(path){return Public.getCurrentHostUrl() + Public.convertNormalUrl(path); }; Public.getWWWServer = function(ssl){if (DeviceUtil.isMobile()){return Public._getSafeUrl(__PAGE_VALUE.MOBILE_SERVER, ssl); } else{return Public._getSafeUrl(__PAGE_VALUE.WWW_SERVER, ssl); }; }; Public.getWWWServerUrl = function(path, ssl){return Public.convertAutoSessionShareUrl(Public.getWWWServer(ssl) + Public.getAppPath() + path); }; Public.getMobileServerUrl = function(path, ssl){if (path.indexOf("/") == 0 && path.toLowerCase().indexOf("/mobile/") != 0){path = UriUtil.safeJobinPath("/Mobile", path); }; return Public.getWWWServerUrl(path, ssl); }; Public.getEventContentServerUrl = function(path, ssl){return Public.convertAutoSessionShareUrl(Public.getWWWServer(ssl) + Public.getEventAppPath() + path); }; Public.getEventContentAppServerUrl = function(path, ssl){return Public.convertAutoSessionShareUrl(Public.getWWWServer(ssl) + Public.getEventAppPath() + path); }; Public.getMemberServerUrl = function(path, ssl){return Public.getWWWServerUrl(path, ssl); }; Public.getLoginServerUrl = function(path, ssl){return Public.getWWWServerUrl(path, ssl); }; Public.getCategoryServerUrl = function(path, ssl){return Public.getWWWServerUrl(path, ssl); }; Public.getSearchServerUrl = function(path, ssl){return Public.getWWWServerUrl(path, ssl); }; Public.getMyServerUrl = function(path, ssl){return Public.getWWWServerUrl(path, ssl); }; Public.getOrderServerUrl = function(path, ssl){return Public.getWWWServerUrl(path, ssl); }; Public.getGoodsServerUrl = function(path, ssl){return Public.getWWWServerUrl(path, ssl); }; Public.getCouponServerUrl = function(path, ssl){return Public.getWWWServerUrl(path, ssl); }; Public.getEventServerUrl = function(path, ssl){return Public.getWWWServerUrl(path, ssl); }; Public.getOpenAPIServerUrl = function(path, ssl){return Public.convertAutoSessionShareUrl(Public._getSafeUrl(__PAGE_VALUE.OPENAPI_SERVER, ssl) + Public.getOpenApiAppPath() + path); }; Public.getPGServerUrl = function(path, ssl){return Public.convertAutoSessionShareUrl(Public._getSafeUrl(__PAGE_VALUE.PG_SERVER, ssl) + Public.getOpenApiAppPath() + path); }; Public.getGlobalWWWServerUrl = function(path, ssl){return Public.convertAutoSessionShareUrl(Public._getSafeUrl(__PAGE_VALUE.QOO10_SERVER, ssl) + Public.getAppPath() + path); }; Public._getSafeUrl = function(url, ssl){if (Public.isMultiSite() && Public.useCommonSSL()){url = UriUtil.getPathQuery(url); url = Public._getCurrentDomain(ssl) + url; } else if (!Public.isLocalServerOrg()){if (ssl){url = url.replace("http://", "https://"); }; }; return url; }; Public._getCurrentDomain = function(ssl){if (ssl){if (Public.isLocalServerOrg()){if (Public.isMultiSite() && Public.useCommonSSL()){return"http://" + Public.getCommonSSLDomain(); } else{return"http://" + Public.getCurrentHost(); }; } else{if (Public.isMultiSite() && Public.useCommonSSL()){return"https://" + Public.getCommonSSLDomain(); } else{return"https://" + Public.getCurrentHost(); }; }; } else if (Public.isMultiSite() && Public.getShopDomain() != ""){return"http://" + Public.getShopDomain(); } else if (window.location.port != 80 && window.location.port != 443){return"http://" + window.location.host + ":" + window.location.port; }; return"http://" + Public.getCurrentHost(); }; Public.goLoginPage = function(){var nextUrl = window.location.href; document.location.href = Public.getLoginServerUrl("/Login/Login.aspx?nextUrl=" + escape(nextUrl), true); }; Public.goPopupLoginPage = function(){var nextUrl = window.location.href; document.location.href = Public.getLoginServerUrl("/Login/PopupLogin.aspx?nextUrl=" + escape(nextUrl)); }; Public.getImgPath = function(){if (window.location.protocol == "https:"){return __PAGE_VALUE.DP_SSL_IMAGE_PATH; } else{return __PAGE_VALUE.DP_IMAGE_PATH; }; }; Public.getImgSearchPath = function(){return Public.getImgPath() + "/image_search_temp/"; }; Public.getStaticImgPath = function(){if (window.location.protocol == "https:"){return __PAGE_VALUE.STATIC_SSL_IMAGE_PATH; } else{return __PAGE_VALUE.STATIC_IMAGE_PATH; }; }; Public.getCurrentHost = function(){return window.location.host; }; Public.getCurrentHostUrl = function(){return window.location.protocol + "//" + Public.getCurrentHost(); }; Public.isMultiSite = function(){return __PAGE_VALUE.IS_MULTISITE; }; Public.getSiteId = function(){return __PAGE_VALUE.SITEID; }; Public.getViewSiteId = function(){return __PAGE_VALUE.VIEW_SITEID; }; Public.isFullSSL = function(){if (__PAGE_VALUE.Is_FullSSL){return __PAGE_VALUE.Is_FullSSL; }; return false; }; Public.useCommonSSL = function(){if (__PAGE_VALUE.USE_COMMONSSL){return __PAGE_VALUE.USE_COMMONSSL; }; return false; }; Public.getCommonSSLDomain = function(){if (__PAGE_VALUE.COMMON_SSL_DOMAIN){return __PAGE_VALUE.COMMON_SSL_DOMAIN; }; return""; }; Public.useMobileDomain = function(){if (__PAGE_VALUE.MOBILE_SERVER){return true; }; return false; }; Public.getShopDomain = function(){if (__PAGE_VALUE.SHOP_DOMAIN){return __PAGE_VALUE.SHOP_DOMAIN; }; return""; }; Public.convertAutoSessionShareUrl = function(nextUrl){var currHost = Public.getCurrentHost(); if (Public.isMultiSite() && Public.useCommonSSL() && currHost != Public.getCommonSSLDomain()){var uriHost = UriUtil.getHost(nextUrl); if (currHost == uriHost || nextUrl.toLowerCase().indexOf("sessionshare.aspx") >= 0){return nextUrl; }; return Public.getSessionShareUrl(nextUrl); }; return nextUrl; }; Public.getSessionShareUrl = function(nextUrl){if (Public.useCommonSSL()){return Public.convertNormalUrl("~/Common/SessionShare.aspx?nextUrl=" + escape(nextUrl)); } else{return nextUrl; }; }; Public.getGoodsImagePath = function(img_contents_no, imgType, stillYN){var goodsImageType = "li"; var imageSize = "400"; if (Util.isNumber(imgType)){imageSize = imgType; } else{switch (imgType){case"L":imageSize = "0"; break; case"M":imageSize = "400"; break; case"M2":imageSize = "160"; break; case"M3":imageSize = "110"; break; case"M4":imageSize = "230"; break; case"S":imageSize = "80"; break; case"LS":imageSize = "80"; break; case"L_S":imageSize = "0"; stillYN = "Y"; break; case"M_S":imageSize = "400"; stillYN = "Y"; break; case"M2_S":imageSize = "160"; stillYN = "Y"; break; case"M3_S":imageSize = "110"; stillYN = "Y"; break; case"M4_S":imageSize = "230"; stillYN = "Y"; break; case"S_S":imageSize = "80"; stillYN = "Y"; break; case"LS_S":imageSize = "80"; stillYN = "Y"; break; case"A":goodsImageType = "ai"; imageSize = "0"; stillYN = "Y"; break; case"AS":goodsImageType = "ai"; imageSize = "80"; stillYN = "Y"; break; case"A_S":goodsImageType = "ai"; imageSize = "0"; stillYN = "Y"; break; case"AS_S":goodsImageType = "ai"; imageSize = "80"; stillYN = "Y"; break; default:imageSize = "400"; break; }; }; return Public.getGdThumbnailImagePath(img_contents_no, goodsImageType, imageSize, stillYN); }; Public.GetAdultImage = function(image_size){var adultImageSrc_18 = String.format("{0}/GMKT.IMG/loading/adult_18.s_{1}-w-fs_s.jpg", Public.getImgPath(), image_size); var adultImageSrc_20 = String.format("{0}/GMKT.IMG/loading/adult_20.s_{1}-w-fs_s.jpg", Public.getImgPath(), image_size); var adultImageSrc_21 = String.format("{0}/GMKT.IMG/loading/adult_21.s_{1}-w-fs_s.jpg", Public.getImgPath(), image_size); if (GMKT.ServiceInfo.nation == "SG"){return adultImageSrc_21; } else if (GMKT.ServiceInfo.nation == "JP" || GMKT.ServiceInfo.nation == "MY"){return adultImageSrc_20; } else if (GMKT.ServiceInfo.nation == "ID" || GMKT.ServiceInfo.nation == "HK" || GMKT.ServiceInfo.nation == "US" || GMKT.ServiceInfo.nation == "CN"){return adultImageSrc_18; }; }; Public.getGdThumbnailImagePath = function(img_contents_no, goodsImgType, size, stillYN){if (parseInt(img_contents_no) < 1){return Public.getAppPath() + "/Img/no_image.gif"; }; var domainUrl = ""; if (goodsImgType == ""){goodsImgType = "li"; }; var goodsImagePath3 = ""; var image_format = "jpg"; if (size == undefined){size = 0; }; if (GMKT != null && GMKT.DeviceInfo != null && GMKT.DeviceInfo.WebpSupport == "Y" && (size == 0 || size > 100)){image_format = "jpg.webp"; }; if (size > 800){size = 800; }; var thumbType = size.toString() + "-w"; domainUrl = location.protocol == "https:"?__PAGE_VALUE.GOODS_SSL_IMAGE_PATH:__PAGE_VALUE.GOODS_IMAGE_PATH; if (stillYN == "Y"){thumbType += "-st"; }; var gd_no = "" + img_contents_no; goodsImagePath3 = gd_no.substr(6, 3) + "/" + gd_no.substr(3, 3) + "/" + gd_no + ".g_" + thumbType + "_g." + image_format; return domainUrl + "/" + goodsImgType + "/" + goodsImagePath3; }; Public.getDPThumbnailImageUrl = function(imgUrl, size){if (!(imgUrl.indexOf("http://") == 0 || imgUrl.indexOf("https://") == 0)){imgUrl = Public.getImgPath(imgUrl, imgUrl.indexOf("https://") == 0); }; return Public.GetDPImagePath(imgUrl, size); }; Public.getGoodsVUrl = function(gd_no, gd_nm, brand_nm, add_info, param, new_link_yn, site_domain){var path = ""; var vpath = ""; if (Util.safeString(new_link_yn) == "")new_link_yn = "N"; if (new_link_yn == "Y" && Util.safeString(site_domain) != ""){path = site_domain + "/item/"; } else{path = Public.getWWWServer() + "/item/"; }; vpath = (Util.safeString(brand_nm) == ""?"":(Public.getSEOVirtualPath(brand_nm, 0) + "-")) + Public.getSEOVirtualPath(gd_nm, 60) + (Util.safeString(add_info) == ""?"":("-" + Public.getSEOVirtualPath(add_info, 0))); path = path + encodeURI(vpath) + "/" + gd_no + (Util.safeString(param) == ""?"":"?" + Util.safeString(param)); return path; }; Public.getGlobalGoodsVUrl = function(gd_no, gd_nm, brand_nm, add_info, param){return Public.getGoodsVUrl(gd_no, gd_nm, brand_nm, add_info, param, "Y", __PAGE_VALUE.QOO10_GOODS_SERVER); }; Public.getSearchVUrl = function(keyword, param){var path = ""; var vpath = ""; path = Public.getWWWServer() + "/s/"; vpath = Public.getSEOVirtualPath(keyword, 30); return path + encodeURI(vpath) + (param == true?"?keyword=" + encodeURI(keyword):""); }; Public.getSEOVirtualPath = function(value, len){value = value.replace(/[\u0000-\u002f\u003a-\u0040\u005b-\u0060\u007b-\u00bf\u1200-\u2e7f\u3000-\u3040\u3100-\u3130\u3190-\u31ef\u3200-\u33ff\ue000-\uf8ff]/gi, '-').replace(/-{1,}/gi, '-'); var values = value.split('-'); var result = ""; for (var i = 0; i < values.length; i++){if (len > 0 && result.length > len){break; } else{result += values[i] + "-"; }; }; result = result.replace(/(^-*)|(-*$)/g, ''); result = result.toUpperCase(); if (len > 0 && result.length > (len + 10)){result = result.substring(0, len + 10); }; return result; }; Public.GetStaticImagePath = function(imageUrl, isCommon){var buffer = Public.getStaticImgPath(); var lang = GMKT.ServiceInfo.ClientLang; if (imageUrl == undefined){return buffer; }; if (!imageUrl.startsWith("http://") && !imageUrl.startsWith("https://") && !imageUrl.startsWith("//")){imageUrl = Public.ChangeLangFolder(imageUrl, lang); if (__PAGE_VALUE.VIEW_SITEID == "m18" && (isCommon != true)){imageUrl = imageUrl.replace("/cm/", "/cm/m18/"); imageUrl = imageUrl.replace("/" + lang + "/", "/" + lang + "/m18/"); }; imageUrl = buffer + imageUrl; } else{if (window.location.protocol == "https:"){if (imageUrl.startsWith("http://static.image-gmkt.com") >= 0){imageUrl = imageUrl.replace("http://static.image-gmkt.com", __PAGE_VALUE.STATIC_SSL_IMAGE_PATH); } else{imageUrl = imageUrl.replace(__PAGE_VALUE.STATIC_IMAGE_PATH, __PAGE_VALUE.STATIC_SSL_IMAGE_PATH); }; } else{if (imageUrl.startsWith("https://static.image-gmkt.com") >= 0){imageUrl = imageUrl.replace("https://static.image-gmkt.com", __PAGE_VALUE.STATIC_IMAGE_PATH); } else{imageUrl = imageUrl.replace(__PAGE_VALUE.STATIC_SSL_IMAGE_PATH, __PAGE_VALUE.STATIC_IMAGE_PATH); }; }; }; if (Public.isReal() && imageUrl.split("?").length > 1){var _imageUrl = imageUrl.split("?")[0]; var _version = imageUrl.split("?")[1]; if (!Util.isNumber(_version)){_version = _version.replace(/\D/g, ""); }; var _file = _imageUrl.substring(0, imageUrl.lastIndexOf('.')); var _ext = _imageUrl.substring(imageUrl.lastIndexOf('.')); if (_version.length > 0 && (_ext == ".js" || _ext == ".png" || _ext == ".jpg" || _ext == ".gif" || _ext == ".ico" || _ext == ".jpeg")){imageUrl = _file + ".v_" + _version + _ext; }; }; return imageUrl; }; Public.GetDPImagePath = function(imageUrl, size, stillYN){if (imageUrl == undefined || imageUrl == ""){return imageUrl; }; if (stillYN == undefined || stillYN == null){stillYN = "Y"; }; if (!imageUrl.startsWith("http://") && !imageUrl.startsWith("https://") && !imageUrl.startsWith("//")){var imageServer = this.getImgPath(); if (imageUrl.startsWith("/")){imageUrl = imageServer + imageUrl; } else{imageUrl = imageServer + "/" + imageUrl; }; } else{if (imageUrl.indexOf("//dp.") == - 1 && imageUrl.indexOf("//dpssl.") == - 1 && imageUrl.indexOf("//gd.") == - 1 && imageUrl.indexOf("//gdssl.") == - 1 && imageUrl.indexOf("//st.") == - 1){return imageUrl; }; if (window.location.protocol == "https:"){imageUrl = imageUrl.replace("http://dp.image-gmkt.com", __PAGE_VALUE.DP_SSL_IMAGE_PATH); imageUrl = imageUrl.replace("http://", "https://"); } else{imageUrl = imageUrl.replace("https://dpssl.image-gmkt.com", __PAGE_VALUE.DP_IMAGE_PATH); }; }; if (imageUrl.toLowerCase().indexOf(".png.webp") >= 0 || imageUrl.toLowerCase().indexOf(".jpg.webp") >= 0 || imageUrl.toLowerCase().indexOf(".gif.webp") >= 0){imageUrl = Util.replace(imageUrl, ".webp", ""); }; var regexp = /\/thumbnail\/[0-9]+-w-fs/g; imageUrl = imageUrl.replace(regexp, ""); if (imageUrl.indexOf("//dp.") >= 0){var regexp2 = /.s_[0-9]+-w-(fs-st|fs)_s/g; if (imageUrl.match(regexp2)){if (size == undefined || size == 0)
        size = Util.safeNumber(imageUrl.match(regexp2)[0]); imageUrl = imageUrl.replace(regexp2, ""); }; } else if (imageUrl.indexOf("//gd.") >= 0){var start_no = imageUrl.indexOf(".g_"); var end_no = imageUrl.indexOf("_g.") + 2; var _org_size = 0; if (start_no >= 0 && end_no >= 0){var remove_str = imageUrl.substring(start_no, end_no); _org_size = Util.safeNumber(remove_str); imageUrl = imageUrl.replace(remove_str, ""); }; var contents_no = Util.safeNumber(imageUrl.substring(imageUrl.lastIndexOf('/'))); if ((size == undefined || size == 0) && _org_size > 0){size = _org_size; }; return Public.getGoodsImagePath(contents_no, size, stillYN); }; var version = ""; if (imageUrl.split("?").length > 1){version = imageUrl.split("?")[1]; imageUrl = imageUrl.split("?")[0]; }; if (GMKT.ServiceInfo.nation == "CN"){imageUrl = imageUrl.replace("http://dp.image-gmkt.com", __PAGE_VALUE.DP_IMAGE_PATH); imageUrl = imageUrl.replace("http://dpssl.image-gmkt.com", __PAGE_VALUE.DP_SSL_IMAGE_PATH); }; var _file; var _ext; if (size != undefined && size > 0){_file = imageUrl.substring(0, imageUrl.lastIndexOf('.')); _ext = imageUrl.substring(imageUrl.lastIndexOf('.')).toLowerCase(); if (_ext == ".png" || _ext == ".jpg" || _ext == ".gif" || _ext == ".jpeg"){if (imageUrl.indexOf("//dp.") >= 0){imageUrl = _file + String.format(".s_{0}-w-fs{1}_s", size, (stillYN == "Y"?"-st":"")) + _ext; } else if (imageUrl.indexOf("//gd.") >= 0){imageUrl = _file + String.format(".g_{0}-w-fs{1}_g", size) + _ext; }; }; }; if (version != "" && imageUrl.indexOf("//dp.") >= 0){_file = imageUrl.substring(0, imageUrl.lastIndexOf('.')); _ext = imageUrl.substring(imageUrl.lastIndexOf('.')).toLowerCase(); if (_ext == ".png" || _ext == ".jpg" || _ext == ".gif" || _ext == ".jpeg"){imageUrl = _file + ".v_" + version + _ext; }; }; if (GMKT.DeviceInfo.WebpSupport == "Y" && (size == undefined || size >= 200) && imageUrl.indexOf(".gif") < 0){imageUrl = imageUrl + ".webp"; }; return imageUrl; }; Public.ChangeLangFolder = function(path, lang){if (path.indexOf("/") == 0){return"/qoo10/front" + path.replace("$lang$", lang); } else{return"/qoo10/front/" + path.replace("$lang$", lang); }; }; Public.GetLoadingImage = function(type, size){if (type == undefined || type == ""){type = "item"; size = 280; }; var loading_image_src = ""; if (type == "empty"){loading_image_src = "/GMKT.IMG/loading_2017/bg_empty.png?20170420"; } else if (type == "profile"){loading_image_src = "/GMKT.IMG/loading_2017/noimg_shp_tlk.png?20170420"; } else if (type == "shop"){loading_image_src = "/GMKT.IMG/loading_2017/img_shop.png?20170420"; } else if (type == "special"){loading_image_src = "/GMKT.IMG/loading_2017/img_qspecials.png?20170420"; } else{if (!Util.isNumber(type)){size = 280; } else{size = type; }; if (__PAGE_VALUE.VIEW_SITEID == "M18"){loading_image_src = "/CN/GMKT.IMG/loading_2017/m18_loading.png?20170420"; } else{loading_image_src = "/GMKT.IMG/loading_2017/qoo10_loading.png?20170420"; }; }; return Public.GetDPImagePath(loading_image_src, size); }; Public.getPageNo = function(){return __PAGE_VALUE.PAGE_NO; }; Public.getPageContextId = function(){if (window.__PAGE_VALUE && __PAGE_VALUE.PAGE_CONTEXT_ID){return __PAGE_VALUE.PAGE_CONTEXT_ID; }; return""; }; Public.isWindowsShoppingApp = function(){if (GMKT.DeviceInfo.BrowserName.indexOf("Qoo10") >= 0 || GMKT.DeviceInfo.DeviceName == "WindowsApp"){return true; }; return false; }; Public.SetGoodsImgErrorLog = function(tmpUrl, tmpErrSys, tmpGlobalOrderType){if (tmpUrl == null){return 0; }; tmpUrl = "" + tmpUrl; if (tmpUrl.trim() == ""){return 0; }; var param = new RMSParam(); param.add("url", tmpUrl); param.add("from_sys", tmpErrSys); param.add("global_order_type", tmpGlobalOrderType); RMSHelper.asyncCallWebMethod(Public.getServiceUrl("swe_GoodsAjaxService.asmx"), "SetGoodsImgErrorLog", param.toJson(), function(ret){}); return 0; }; Public.GetCleanBanner = function(data){data = Public.BannerLinkChange(data); var reg_dp = data.match(/(https?:\/\/)(dp.image-gmkt.com|dpssl.image-gmkt.com|dp.image-qoo10.cn|dpssl.image-qoo10.cn)(.*?)\.(jpg.webp|png.webp|gif.webp|png|jpg|gif|webp)/gi); if (reg_dp && reg_dp.length > 0){for (var i = 0; i < reg_dp.length; i++){data = data.replace(reg_dp[i], Public.GetDPImagePath(reg_dp[i])); }; }; var reg_dp_ver = data.match(/(https?:\/\/)(dp.image-gmkt.com|dpssl.image-gmkt.com|dp.image-qoo10.cn|dpssl.image-qoo10.cn)(.*?)\.(jpg.webp|png.webp|gif.webp|png|jpg|gif|webp)+\?+[0-9]+/gi); if (reg_dp_ver && reg_dp_ver.length > 0){for (var i = 0; i < reg_dp_ver.length; i++){data = data.replace(reg_dp_ver[i], Public.GetDPImagePath(reg_dp_ver[i])); }; }; var reg_st = data.match(/(https?:\/\/)(static.image-gmkt.com|staticssl.image-gmkt.com|static.image-qoo10.cn|staticssl.image-qoo10.cn)(.*?)\.(jpg.webp|png.webp|gif.webp|png|jpg|gif|webp)/gi); if (reg_st && reg_st.length > 0){for (var i = 0; i < reg_st.length; i++){data = data.replace(reg_st[i], Public.GetStaticImagePath(reg_st[i])); }; }; var reg_gd = data.match(/(https?:\/\/)(gd.image-gmkt.com|gdssl.image-gmkt.com|gd.image-qoo10.cn|gdssl.image-qoo10.cn)(.*?)\.(jpg.webp|webp|jpg)/gi); if (reg_gd && reg_gd.length > 0){for (var i = 0; i < reg_gd.length; i++){data = data.replace(reg_gd[i], Public.GetDPImagePath(reg_gd[i])); }; }; return data; }; Public.BannerLinkChange = function(data){if (Public.isFullSSL()){var reg_matches = data.match(/(https?:\/\/)(?!special|qsm)[a-zA-Z0-9\-\.]+.qoo10.co.id|(https?:\/\/)(?!special|qsm)[a-zA-Z0-9\-\.]+.qoo10.my|(https?:\/\/)(?!special|qsm)[a-zA-Z0-9\-\.]+.qoo10.hk|(https?:\/\/)(?!special|qsm)[a-zA-Z0-9\-\.]+.qoo10.sg|(https?:\/\/)(?!special|qsm)[a-zA-Z0-9\-\.]+.qoo10.jp|(https?:\/\/)(?!special|qsm)[a-zA-Z0-9\-\.]+.qoo10.com/g); if (reg_matches && reg_matches.length > 0){for (var i = 0; i < reg_matches.length; i++){var orgUrl = reg_matches[i]; if (Public.useMobileDomain()){data = data.replace(orgUrl, Public.getWWWServer()); } else{data = data.replace(orgUrl, orgUrl.replace("http://", "https://")); }; }; }; }; return data; }
function qalert(){var type = "S"; Toast.exec(arguments, type, window.event); }; function qlayer(){var type = "L"; Toast.exec(arguments, type, window.event); }; function qnotice(){var type = "N"; Toast.exec(arguments, type, window.event); }; function qwarning(){var type = "W"; Toast.exec(arguments, type, window.event); }; function qerror(){var type = "E"; Toast.exec(arguments, type, window.event); }; function qconfirm(){var type = "C"; Toast.exec(arguments, type, window.event); }; function clearQNotice(timer){if (timer == undefined){Toast.remove(); } else{setTimeout(function(){Toast.remove(); }, timer); }; }; var Toast = {options:{}, id:0, frmDiv:"__div_toast", noticeDiv:"<div id=\"{id}\" class=\"{class}\" style=\"opacity:0;\"><p>{desc}</p></div>", messageDiv:"<div id=\"{id}\" class=\"{class}\" style=\"opacity:0;\"><div class=\"inner\"><p>{title}</p><span class=\"dsc\">{desc}</span></div></div>", closeBtn:"<button type=\"button\" class=\"btn_clse\">Close button</button>", btnSet:"<div class=\"btn_set\"></div>", btnLeft:"<a href=\"#\" class=\"sbmt\">{0}</a>", btnRight:"<a href=\"#\" class=\"cncl\">{0}</a>", getFrame:function(){return $("#" + this.frmDiv); }, init:function(){var $toast_frame = this.getFrame(); if ($toast_frame.length == 0){$("body").append("<div id='" + this.frmDiv + "' class='ly_alert_wrap' style='z-index:1000'></div>"); }; }, typeClass:function(back_color){var layer_class = "ly_cm_alert"; switch (back_color){case"red":layer_class += " error"; break; case"orange":layer_class += " warning"; break; case"green":layer_class += " success"; break; case"sky":layer_class += " normal"; break; case"black":layer_class += " "; break; default:layer_class += " normal"; }; return layer_class; }, exec:function(arguments, type, evt){if (this.id == 0){this.init(); }; ++this.id; if (type == undefined){type == "S"; }; var layer_css_type = type; var desc = arguments[0]; var callback = arguments[1]; var back_color = arguments[2]; if (back_color != undefined){layer_css_type = back_color; } else{if ("E".indexOf(type) >= 0){layer_css_type = "red"; } else if ("W".indexOf(type) >= 0){layer_css_type = "orange"; } else if ("S".indexOf(type) >= 0){layer_css_type = "green"; } else{layer_css_type = "sky"; }}
var confirm, cancle; var $toast_frame = this.getFrame(); var toast_class = this.typeClass(layer_css_type); var id = "qoo10_toast_" + this.id; var title = this.options.title; var closeButton = this.options.closeButton; var buttonSet = false; var autoClose = Toast.options.autoClose; var messageDiv = this.messageDiv; if (type == "N"){title = ""; messageDiv = this.noticeDiv; closeButton = false; confirm = arguments[1]; if (confirm){buttonSet = true; }; } else if (type == "L"){title = ""; messageDiv = this.noticeDiv; closeButton = false; autoClose = false; } else if (type == "C"){title = ""; messageDiv = this.noticeDiv; closeButton = false; autoClose = false; buttonSet = true; confirm = arguments[1]; cancel = arguments[2]; }; var html = messageDiv.replace("{id}", id).replace("{class}", toast_class).replace("{title}", title).replace("{desc}", desc); $toast_frame.append(html); var $toast_obj = $("#" + id); if (buttonSet){$toast_obj.append(this.btnSet); var button_text = ""; var confirm_text = MultiLang.findResource("__master/defaultmasterpage.master__confirm"); var cancel_text = MultiLang.findResource("__master/defaultmasterpage.master__cancel"); if (confirm_text == ""){var confirm_text = "ç¢ºèª"; var cancel_text = "ã‚­ãƒ£ãƒ³ã‚»ãƒ«"; }; if (type == "N"){button_text = String.format(this.btnLeft, confirm_text); } else{button_text = String.format(this.btnLeft, confirm_text); button_text = button_text + String.format(this.btnRight, cancel_text); }; if (button_text == ""){closeButton = true; } else{autoClose = false; $toast_obj.find(".btn_set").append(button_text); $toast_obj.find(".sbmt").bind("click", function(){Toast.remove(id, confirm); return false; }); $toast_obj.find(".cncl").bind("click", function(){Toast.remove(id, cancel); return false; }); }; }; if (closeButton){$toast_obj.append(this.closeBtn); $toast_obj.find(".btn_clse").bind("click", function(){Toast.remove(id, callback); return false; }); }; if ($toast_obj != null && $toast_obj != undefined && $toast_obj.length > 0){this.position(evt); var delay_time = desc.toString().length < 60?this.options.extendedTimeOut:desc.toString().length * 30; $toast_obj.animate({opacity:1}, this.options.showDuration, function(){if (autoClose){$(this).delay(delay_time).animate({opacity:0}, Toast.options.hideDuration, function(){Toast.remove(id, callback, evt); }); }; }); }; }, remove:function(id, callback, evt){if (id == undefined){$(this.getFrame()).find("div[id^='qoo10_toast']").remove(); this.optionInit(); } else{$("#" + id).remove(); }; this.position(evt); if (typeof (callback) == 'function'){callback(); }; }, position:function(evt){var $toast_frame = this.getFrame(); var top_position, left_position, max_top = ($("#container").length > 0?$("#container").offset().top:100); if (evt != undefined && evt.pageY != undefined){top_position = (evt.pageY - $toast_frame.outerHeight()); } else{top_position = Math.max(0, (($(window).height() - $toast_frame.outerHeight()) / 2) + $(window).scrollTop()); }; if (top_position < max_top){top_position = max_top; }; left_position = ($(window).width() - $toast_frame.outerWidth()) / 2; $toast_frame.css({"top":top_position + "px", "left":left_position + "px"}); }, optionInit:function(){this.options.title = location.hostname; this.options.closeButton = true; this.options.showDuration = "1000"; this.options.hideDuration = "500"; this.options.extendedTimeOut = "1500"; this.options.autoClose = true; }}; Toast.options = {"title":location.hostname, "closeButton":true, "showDuration":"1000", "hideDuration":"500", "extendedTimeOut":"1500", "autoClose":true}
if (!window.JSON){window.JSON = {parse:function(sJSON){return eval("(" + sJSON + ")"); }, stringify:function(vContent){if (vContent instanceof Object){var sOutput = ""; if (vContent.constructor === Array){for (var nId = 0; nId < vContent.length; sOutput += this.stringify(vContent[nId]) + ",", nId++); return"[" + sOutput.substr(0, sOutput.length - 1) + "]"; }if (vContent.toString !== Object.prototype.toString){return"\"" + vContent.toString().replace(/"/g, "\\$&") + "\""; }for (var sProp in vContent){sOutput += "\"" + sProp.replace(/"/g, "\\$&") + "\":" + this.stringify(vContent[sProp]) + ","; }return"{" + sOutput.substr(0, sOutput.length - 1) + "}"; }return typeof vContent === "string"?"\"" + vContent.replace(/"/g, "\\$&") + "\"":String(vContent); }}; }
var RMSHelper = function(){}; RMSHelper.getXMLHTTP = function(){if (window.XMLHttpRequest)return new XMLHttpRequest(); var versions = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.4.0", "Microsoft.XMLHTTP", "MSXML2.XMLHTTP.5.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP"]; for (var i = 0; i < versions.length; i++){try{var oXMLHTTP = new ActiveXObject(versions[i]); return oXMLHTTP; } catch (e){}; }; throw new Error("No XMLHTTP"); }; RMSHelper.AfterCall = function(timer){try{if (DelayImageLoading && DelayImageLoading.ProcUnloadImage){if (timer == undefined){DelayImageLoading.ProcUnloadImage(); timer = 500; }; setTimeout(DelayImageLoading.ProcUnloadImage, timer); }; } catch (e){}; }; RMSHelper.callWebMethod = function(serviceName, methodName, argument, isUrlEocoding){if (!serviceName){serviceName = UriUtil.getCurrentPath(); }; var svc = serviceName + "/" + methodName; if (!argument){argument = ""; }; var xmlHttp = RMSHelper.getXMLHTTP(); xmlHttp.open("POST", svc, false); xmlHttp.setRequestHeader('Content-Type', 'application/json'); if (isUrlEocoding){xmlHttpasync.setRequestHeader('JSON_URL_ENCODE', 'Y'); }; xmlHttp.send(argument); var result = null; try{result = eval("(" + xmlHttp.responseText + ")"); } catch (ex){}; if (result && result.ExceptionType != undefined){throw result; }; RMSHelper.AfterCall(500); if (result && result.d != undefined){if (result.d.OutputData && result.d.OutputData["return"] != undefined){result.d.OutputData.Return = result.d.OutputData["return"]; }; return result.d; }; if (result.OutputData && result.OutputData["return"] != undefined){result.OutputData.Return = result.OutputData["return"]; }; return result; }; RMSHelper.asyncCallWebMethod = function(serviceName, methodName, argument, callBackFunction, isUrlEocoding){if (!serviceName){serviceName = UriUtil.getCurrentPath(); }; var svc = serviceName + "/" + methodName; var xmlHttpasync = null; xmlHttpasync = RMSHelper.getXMLHTTP(); if (!argument)argument = ""; xmlHttpasync.open("POST", svc, true); xmlHttpasync.setRequestHeader('Content-Type', 'application/json'); if (isUrlEocoding){xmlHttpasync.setRequestHeader('JSON_URL_ENCODE', 'Y'); }; xmlHttpasync.onreadystatechange = function(){if (xmlHttpasync.readyState == 4){var result = null; try{result = eval("(" + xmlHttpasync.responseText + ")"); } catch (ex){}; try{if (result && result.ExceptionType != undefined){throw result; }; if (result && result.d != undefined){result = result.d; }; } catch (ex){}; if (result.OutputData && result.OutputData["return"] != undefined){result.OutputData.Return = result.OutputData["return"]; }; if (typeof (callBackFunction) === "function"){callBackFunction(result, svc, methodName, xmlHttpasync); }
RMSHelper.AfterCall(); }; }; xmlHttpasync.send(argument); }; RMSHelper.callWebObject = function(url, httpMethod, postData){var svc = url; if (svc.indexOf("?") >= 0){svc += "&"; } else{svc += "?"; }; svc += "___cache_expire___=" + new Date().getTime(); var xmlHttp = RMSHelper.getXMLHTTP(); if (httpMethod == "POST"){xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded'); xmlHttp.open("POST", svc, false); xmlHttp.send(postData); } else{xmlHttp.open("GET", svc, false); xmlHttp.send(); }; if (xmlHttp.getResponseHeader("NoResult") !== null || xmlHttp.getResponseHeader("NoResult") === "Y"){return""; } else{RMSHelper.AfterCall(500); return xmlHttp.responseText; }; }; RMSHelper.asyncCallWebObject = function(url, httpMethod, postData, callBackFunction, statObject){var svc = url; if (svc.indexOf("?") >= 0){svc += "&"; } else{svc += "?"; }; svc += "___cache_expire___=" + new Date().getTime(); var xmlHttp = RMSHelper.getXMLHTTP(); xmlHttp.open(httpMethod, svc, true); xmlHttp.onreadystatechange = function(){if (xmlHttp.readyState == 4){callBackFunction(xmlHttp.responseText, svc, xmlHttp, statObject); RMSHelper.AfterCall(); }; }; if (httpMethod == "POST"){xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded'); xmlHttp.send(postData); } else{xmlHttp.send(); }; }; RMSHelper.dynamic = function(){}; RMSHelper.dynamic.executeToDataTable = function(objectId, argument, callBackFunction){return RMSHelper.dynamic.callDynamicWebMethod("ExecuteToDataTable", objectId, argument, callBackFunction); }; RMSHelper.dynamic.executeToDataSet = function(objectId, argument, callBackFunction){return RMSHelper.dynamic.callDynamicWebMethod("ExecuteToDataSet", objectId, argument, callBackFunction); }; RMSHelper.dynamic.executeNonQuery = function(objectId, argument, callBackFunction){return RMSHelper.dynamic.callDynamicWebMethod("ExecuteNonQuery", objectId, argument, callBackFunction); }; RMSHelper.dynamic.executeScalar = function(objectId, argument, callBackFunction){return RMSHelper.dynamic.callDynamicWebMethod("ExecuteScalar", objectId, argument, callBackFunction); }; RMSHelper.dynamic.executeToDataTableTx = function(objectId, argument, callBackFunction){return RMSHelper.dynamic.callDynamicWebMethod("ExecuteToDataTableTx", objectId, argument); }; RMSHelper.dynamic.executeToDataSetTx = function(objectId, argument, callBackFunction){return RMSHelper.dynamic.callDynamicWebMethod("ExecuteToDataSetTx", objectId, argument, callBackFunction); }; RMSHelper.dynamic.executeNonQueryTx = function(objectId, argument, callBackFunction){return RMSHelper.dynamic.callDynamicWebMethod("ExecuteNonQueryTx", objectId, argument, callBackFunction); }; RMSHelper.dynamic.executeScalarTx = function(objectId, argument, callBackFunction){return RMSHelper.dynamic.callDynamicWebMethod("ExecuteScalarTx", objectId, argument, callBackFunction); }; RMSHelper.dynamic.callDynamicWebMethod = function(methodName, objectId, rmsParam, callBackFunction){var serviceName = Public.getServiceUrl("swe_DynamicDataService.asmx"); var argument = "{\"id\":\"" + objectId + "\", \"paramList\":" + rmsParam.toDynamicJson() + ", \"___cache_expire___\":\"" + new Date().getTime() + "\"}"; if (callBackFunction){return RMSHelper.asyncCallWebMethod(serviceName, methodName, argument, callBackFunction); } else{return RMSHelper.callWebMethod(serviceName, methodName, argument); }; }; var RMSParam = function(){this._pl = new Array(); }; RMSParam.create = function(){return new RMSParam(); }; RMSParam.prototype.add = function(name, value){this._pl[name] = value; return this; }; RMSParam.prototype.toXml = function(){var xml = ""; for (var p in this._pl){if (typeof (this._pl[p]) != "function"){xml += "<" + p + ">" + this._pl[p].toString().replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;") + "</" + p + ">"; }; }; return xml; }; RMSParam.prototype.toJson = function(isUrlEocoding){var query = ""; for (var p in this._pl){if (typeof (this._pl[p]) != "function"){if (query.length > 0){query += ","; }; if (this._pl[p] == null){query += "\"" + p + "\"" + ":null"; } else{var val = this._pl[p]; if (isUrlEocoding && typeof (val) == "string"){val = encodeURIComponent(val); }; query += "\"" + p + "\"" + ":" + JSON.stringify(val); }; }; }; if (query.length > 0){query += ","; }; query += "\"___cache_expire___\":\"" + new Date().getTime() + "\""; return"{" + query + "}"; }; RMSParam.prototype.toDynamicJson = function(){var query = ""; for (var p in this._pl){if (typeof (this._pl[p]) != "function"){if (query.length > 0){query += ","; }; if (this._pl[p] == null){query += "{\"Name\":\"" + p + "\", \"Value\":null}"; } else{query += "{\"Name\":\"" + p + "\", \"Value\":" + JSON.stringify(this._pl[p]) + "}"; }; }; }; return"{\"ParamList\":[" + query + "]}"; }
var Handler = {}; if (document.addEventListener){Handler.add = function(element, eventType, handler){if (typeof element == "string"){element = document.getElementById(element); }; if (!element){return; }; if (eventType.indexOf("on") != 0){element.addEventListener(eventType, handler, false); } else{element.addEventListener(eventType.substr(2, eventType.length - 2), handler, false); }; }; Handler.remove = function(element, eventType, handler){if (typeof element == "string"){element = document.getElementById(element); }; if (!element){return; }; if (eventType.indexOf("on") != 0){element.removeEventListener(eventType, handler, false); } else{element.removeEventListener(eventType.substr(2, eventType.length - 2), handler, false); }; }; } else if (document.attachEvent){Handler.add = function(element, eventType, handler){if (typeof element == "string"){element = document.getElementById(element); }; if (!element){return; }; if (Handler._find(element, eventType, handler) != - 1){return; }; var wrappedHandler = function(e){if (!e)e = window.event; var event = {_event:e, type:e.type, target:e.srcElement, currentTarget:element, relatedTarget:e.fromElement?e.fromElement:e.toElement, eventPhase:(e.srcElement == element)?2:3, clientX:e.clientX, clientY:e.clientY, screenX:e.screenX, screenY:e.screenY, altKey:e.altKey, ctrlKey:e.ctrlKey, shiftKey:e.shiftKey, charCode:e.keyCode, stopPropagation:function(){this._event.cancelBubble = true; }, preventDefault:function(){this._event.returnValue = false; }}; if (Function.prototype.call){handler.call(element, event); } else{element._currentHandler = handler; element._currentHandler(event); element._currentHandler = null; }; }; if (eventType.indexOf("on") != 0){element.attachEvent("on" + eventType, wrappedHandler); } else{element.attachEvent(eventType, wrappedHandler); }; var h = {element:element, eventType:eventType, handler:handler, wrappedHandler:wrappedHandler}; var d = element.document || element; var w = d.parentWindow; var id = Handler._uid(); if (!w._allHandlers){w._allHandlers = {}; }; w._allHandlers[id] = h; if (!element._handlers){element._handlers = []; }; element._handlers.push(id); if (!w._onunloadHandlerRegistered){w._onunloadHandlerRegistered = true; w.attachEvent("onunload", Handler._removeAllHandlers); }; }; Handler.remove = function(element, eventType, handler){var i = Handler._find(element, eventType, handler); if (i == - 1){return; }; var d = element.document || element; var w = d.parentWindow; var handlerId = element._handlers[i]; var h = w._allHandlers[handlerId]; if (eventType.indexOf("on") != 0){element.detachEvent("on" + eventType, h.wrappedHandler); } else{element.detachEvent(eventType, h.wrappedHandler); }; element._handlers.splice(i, 1); delete w._allHandlers[handlerId]; }; Handler._find = function(element, eventType, handler){var handlers = element._handlers; if (!handlers){return - 1; }; var d = element.document || element; var w = d.parentWindow; for (var i = handlers.length - 1; i >= 0; i--){var handlerId = handlers[i]; var h = w._allHandlers[handlerId]; if (h.eventType == eventType && h.handler == handler){return i; }; }; return - 1; }; Handler._removeAllHandlers = function(){var w = this; for (id in w._allHandlers){var h = w._allHandlers[id]; if (h.eventType.indexOf("on") != 0){h.element.detachEvent("on" + h.eventType, h.wrappedHandler); } else{h.element.detachEvent("on" + h.eventType, h.wrappedHandler); }; delete w._allHandlers[id]; }; }; Handler._counter = 0; Handler._uid = function(){return"h" + Handler._counter++; }; }
function MM_swapImgRestore(){var i, x, a = document.MM_sr; for (i = 0; a && i < a.length && (x = a[i]) && x.oSrc; i++)x.src = x.oSrc; }; function MM_preloadImages(){var d = document; if (d.images){if (!d.MM_p)d.MM_p = new Array(); var i, j = d.MM_p.length, a = MM_preloadImages.arguments; for (i = 0; i < a.length; i++){if (a[i].indexOf("#") != 0){d.MM_p[j] = new Image; d.MM_p[j++].src = a[i]; }}; }; }; function MM_findObj(n, d){var p, i, x; if (!d)d = document; if ((p = n.indexOf("?")) > 0 && parent.frames.length){d = parent.frames[n.substring(p + 1)].document; n = n.substring(0, p); }; if (!(x = d[n]) && d.all){x = d.all[n]}; for (i = 0; !x && i < d.forms.length; i++){x = d.forms[i][n]}; for (i = 0; !x && d.layers && i < d.layers.length; i++){x = MM_findObj(n, d.layers[i].document); }; if (!x && d.getElementById)x = d.getElementById(n); {return x; }; }; function MM_swapImage(){var i, j = 0, x, a = MM_swapImage.arguments; document.MM_sr = new Array; for (i = 0; i < (a.length - 2); i += 3){if ((x = MM_findObj(a[i])) != null){document.MM_sr[j++] = x; if (!x.oSrc)x.oSrc = x.src; x.src = a[i + 2]; }; }; }; function MM_openBrWindow(theURL, winName, features){window.open(theURL, winName, features); }
var MultiLang = function(){}; MultiLang.findResource = function(resourceId, arg1, arg2, arg3){var val = MultiLang._findResource(resourceId, false); if (arg3 != undefined){val = val.toString().replace('{0}', arg1.toString()).toString().replace('{1}', arg2.toString()).replace('{2}', arg3.toString()); } else if (arg2 != undefined){val = val.toString().replace('{0}', arg1.toString()).toString().replace('{1}', arg2.toString()); } else if (arg1 != undefined){val = val.toString().replace('{0}', arg1.toString()); }; return val; }; MultiLang.findResourceByNation = function(resourceId, arg1, arg2, arg3){var val = MultiLang._findResource(resourceId, true, true); if (arg3 != undefined){val = val.toString().replace('{0}', arg1.toString()).toString().replace('{1}', arg2.toString()).replace('{2}', arg3.toString()); } else if (arg2 != undefined){val = val.toString().replace('{0}', arg1.toString()).toString().replace('{1}', arg2.toString()); } else if (arg1 != undefined){val = val.toString().replace('{0}', arg1.toString()); }; return val; }; MultiLang.findResourceForceByNation = function(resourceId, arg1, arg2, arg3){var val = MultiLang._findResource(resourceId, true, false); if (arg3 != undefined){val = val.toString().replace('{0}', arg1.toString()).toString().replace('{1}', arg2.toString()).replace('{2}', arg3.toString()); } else if (arg2 != undefined){val = val.toString().replace('{0}', arg1.toString()).toString().replace('{1}', arg2.toString()); } else if (arg1 != undefined){val = val.toString().replace('{0}', arg1.toString()); }; return val; }; MultiLang._findResource = function(resourceId, bNationResource, bRegionResource){if (bRegionResource){resourceId += "__" + GMKT.ServiceInfo.region; } else if (bNationResource){resourceId += "__" + GMKT.ServiceInfo.nation; }; if (__ClientResource != undefined){var val = __ClientResource[resourceId.toLowerCase()]; if (val != undefined){return val; }; }; var msg = "Resource('" + resourceId.toLowerCase() + "') not found"; Public.WriteScriptError(msg, window.location.href, "MultiLang._findResource", "", "Warn"); return""; }; MultiLang.findCommonResource = function(categoryid, resourceId){return MultiLang._findCommonResource(categoryid, resourceId, false); }; MultiLang.findCommonResourceByNation = function(categoryid, resourceId){return MultiLang._findCommonResource(categoryid, resourceId, true, true); }; MultiLang.findCommonResourceForceByNation = function(categoryid, resourceId){return MultiLang._findCommonResource(categoryid, resourceId, true, false); }; MultiLang._findCommonResource = function(categoryid, resourceId, bNationResource, bRegionResource){if (bRegionResource){resourceId += "__" + GMKT.ServiceInfo.region; } else if (bNationResource){resourceId += "__" + GMKT.ServiceInfo.nation; }; if (__ClientResource != undefined){var val = __ClientResource["__" + categoryid.toLowerCase() + "__" + resourceId.toLowerCase()]; if (val != undefined){return val; }; }; var msg = "Resource('" + "__" + categoryid.toLowerCase() + "__" + resourceId.toLowerCase() + "') not found"; Public.WriteScriptError(msg, window.location.href, "MultiLang._findCommonResource", "999", "Warn"); return""; }; MultiLang.findScriptResource = function(resourceId){return MultiLang._findScriptResource(resourceId, false); }; MultiLang.findScriptResourceByNation = function(resourceId){return MultiLang._findScriptResource(resourceId, true, true); }; MultiLang.findScriptResourceForceByNation = function(resourceId){return MultiLang._findScriptResource(resourceId, true, false); }; MultiLang._findScriptResource = function(resourceId, bNationResource, bRegionResource){if (bRegionResource){resourceId += "__" + GMKT.ServiceInfo.region; } else if (bNationResource){resourceId += "__" + GMKT.ServiceInfo.nation; }; if (__ClientResource != undefined){var val = eval(__ClientResource[resourceId.toLowerCase()]); if (val != undefined){return val; }; }; var msg = "Resource('" + resourceId + "') not found"; Public.WriteScriptError(msg, window.location.href, "MultiLang._findScriptResource", "999", "Warn"); return null; }; MultiLang.addResource = function(resourceId, text){__ClientResource[resourceId.toLowerCase()] = text; }
SelectBoxBinder = function(){}; SelectBoxBinder.bindingJson = function(objSelect, json, valuekey, textkey, valueBinder, textBinder){if (json.__type == "System.Data.DataTable"){for (var i = 0; i < json.Rows.length; i++){var valueData = json.Rows[i][valuekey]; var textData = json.Rows[i][textkey]; if (valueBinder != undefined && valueBinder != null){valueData = valueBinder(valuekey, valueData, json, i); }; if (textBinder != undefined && textBinder != null){textData = textBinder(valuekey, textData, json, i); }; SelectBoxBinder.addOption(objSelect, textData, valueData); }; } else{for (var i = 0; i < json.length; i++){var valueData = json[i][valuekey]; var textData = json[i][textkey]; if (valueBinder != undefined && valueBinder != null){valueData = valueBinder(valuekey, valueData, json, i); }; if (textBinder != undefined && textBinder != null){textData = textBinder(valuekey, textData, json, i); }; SelectBoxBinder.addOption(objSelect, textData, valueData); }; }; }; SelectBoxBinder.addOption = function(objSelect, text, value){var opt = new Option(text, value); objSelect.options.add(opt); return opt; }; SelectBoxBinder.clear = function(objSelect, rowIndex, delGroup){if (!delGroup && $(objSelect).children("optgroup") != null && $(objSelect).children("optgroup").length > 0){delGroup = true; }; if (delGroup){while (objSelect.firstChild){objSelect.removeChild(objSelect.firstChild); }; } else{if (!rowIndex){rowIndex = 0; }; objSelect.options.length = rowIndex; }; }
var QTMS = {}; QTMS.CheckToken_CallbackFunc = null; QTMS._CheckToken_Callback = function(result){if (result.Token){Util.setCookie("QTMSToken", result.Token); }; eval(QTMS.CheckToken_CallbackFunc)(result); }; QTMS.CheckToken = function(token, policy_id, callback_nm){if (token == null || token == undefined){token = QTMS.GetQTMSTokenCookie(); }; if (typeof (callback_nm) != "string"){window["QTMSCallbackFunction"] = callback_nm; callback_nm = "QTMSCallbackFunction"; }; QTMS.CheckToken_CallbackFunc = callback_nm; $.ajax({url:"http://qtms.giosis.net/gmkt.inc.qtms.routingservice/CheckToken.routing?token=" + token + "&policy_id=" + policy_id, method:'GET', dataType:"jsonp", jsonpCallback:"QTMS._CheckToken_Callback", success:function(data, status){}, error:function(xdhr){}}); }; QTMS.ExpireToken = function(token, callback_nm){if (typeof (callback_nm) != "string"){window["QTMSCallbackFunction"] = callback_nm; callback_nm = "QTMSCallbackFunction"; }; $.ajax({url:"http://qtms.giosis.net/gmkt.inc.qtms.routingservice/ExpireToken.routing?token=" + token, method:'GET', dataType:"jsonp", jsonpCallback:callback_nm, success:function(data, status){}, error:function(xdhr){}}); var dt = new Date(); var date = dt.getFullYear() + "-" + (dt.getMonth() + 1) + "-" + dt.getDate() + " " + dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds(); Util.setCookie("QTMSToken", QTMS.GetQTMSTokenCookie() + "," + date); }; QTMS.ExpireTokenByClose = function(token){QTMS.ExpireToken(token); var url = window.location.href; var idx = url.indexOf('/', 10); url = url.substring(idx, url.length); Util.setCookie("QTMSTokenCurrentUrl", url); }; QTMS.GetQTMSTokenCookie = function(){var token = Util.getCookie("QTMSToken"); if (token){token = token.indexOf(',') >= 0?token.split(',')[0]:token; } else{token = ""; }; return token; }; QTMS.AutoCheckToken = function(service_url, callback){var token = QTMS.GetQTMSTokenCookie(); if (!token){return false; }; QTMS.CheckToken(token, 0, function(result){if (callback){callback(result); }; if (result.WaitingCount == 0){window.location.href = service_url; } else if (result.WaitingCount > 0){var interval = 60000; if (result.WaitingCount <= 100){interval = 5000; } else if (result.WaitingCount <= 1000){interval = 10000; }; setTimeout(function(){QTMS.AutoCheckToken(service_url, callback); }, interval); }}); }
var Base64 = {_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", encode:function(e){var t = ""; var n, r, i, s, o, u, a; var f = 0; e = Base64._utf8_encode(e); while (f < e.length){n = e.charCodeAt(f++); r = e.charCodeAt(f++); i = e.charCodeAt(f++); s = n >> 2; o = (n & 3) << 4 | r >> 4; u = (r & 15) << 2 | i >> 6; a = i & 63; if (isNaN(r)){u = a = 64} else if (isNaN(i)){a = 64}t = t + this._keyStr.charAt(s) + this._keyStr.charAt(o) + this._keyStr.charAt(u) + this._keyStr.charAt(a)}return t}, decode:function(e){var t = ""; var n, r, i; var s, o, u, a; var f = 0; e = e.replace(/[^A-Za-z0-9\+\/\=]/g, ""); while (f < e.length){s = this._keyStr.indexOf(e.charAt(f++)); o = this._keyStr.indexOf(e.charAt(f++)); u = this._keyStr.indexOf(e.charAt(f++)); a = this._keyStr.indexOf(e.charAt(f++)); n = s << 2 | o >> 4; r = (o & 15) << 4 | u >> 2; i = (u & 3) << 6 | a; t = t + String.fromCharCode(n); if (u != 64){t = t + String.fromCharCode(r)}if (a != 64){t = t + String.fromCharCode(i)}}t = Base64._utf8_decode(t); return t}, _utf8_encode:function(e){e = e.replace(/\r\n/g, "\n"); var t = ""; for (var n = 0; n < e.length; n++){var r = e.charCodeAt(n); if (r < 128){t += String.fromCharCode(r)} else if (r > 127 && r < 2048){t += String.fromCharCode(r >> 6 | 192); t += String.fromCharCode(r & 63 | 128)} else{t += String.fromCharCode(r >> 12 | 224); t += String.fromCharCode(r >> 6 & 63 | 128); t += String.fromCharCode(r & 63 | 128)}}return t}, _utf8_decode:function(e){var t = ""; var n = 0; var r = c1 = c2 = 0; while (n < e.length){r = e.charCodeAt(n); if (r < 128){t += String.fromCharCode(r); n++} else if (r > 191 && r < 224){c2 = e.charCodeAt(n + 1); t += String.fromCharCode((r & 31) << 6 | c2 & 63); n += 2} else{c2 = e.charCodeAt(n + 1); c3 = e.charCodeAt(n + 2); t += String.fromCharCode((r & 15) << 12 | (c2 & 63) << 6 | c3 & 63); n += 3}}return t}}; var WiseBird = {FB_PIXEL_ID:"655384014580320", AppendScript:function(){!function(f, b, e, v, n, t, s){if (f.fbq)return; n = f.fbq = function(){n.callMethod?n.callMethod.apply(n, arguments):n.queue.push(arguments)}; if (!f._fbq)f._fbq = n; n.push = n; n.loaded = !0; n.version = '2.0'; n.queue = []; t = b.createElement(e); t.async = !0; t.src = v; s = b.getElementsByTagName(e)[0]; s.parentNode.insertBefore(t, s)}(window, document, 'script', '//connect.facebook.net/en_US/fbevents.js'); fbq('init', WiseBird.FB_PIXEL_ID); fbq('track', 'PageView'); }, AddToCart:function(gd_nos, price){this.AppendScript(); fbq('track', 'AddToCart', {content_name:'Shopping Cart', content_ids:gd_nos.split(","), content_type:'product', value:price, currency:"IDR"}); }, ViewContent:function(category, gd_nm, gd_no, price){this.AppendScript(); fbq('track', 'ViewContent', {content_name:gd_nm, content_category:category, content_ids:gd_no, content_type:'product', value:price, currency:"IDR"}); }}
var countdown_event = new Array(); var Countdown = function(){}; Countdown.Create = function(DisplayType, TargetID, TargetDate, DisplayFormat, FinishMessage, CountStepper, CountActive, LeadingZero){if (countdown_event[TargetID] != undefined){clearTimeout(countdown_event[TargetID]); }; if (typeof (DisplayType) == "undefined"){DisplayType = "HHMMSS"}; if (typeof (TargetID) == "undefined"){TargetID = "countdown"}; if (typeof (TargetDate) == "undefined"){TargetDate = "12/31/2020 5:00 AM"}; if (typeof (DisplayFormat) == "undefined"){DisplayFormat = "%%D%% Days, %%H%% : %%M%% : %%S%%"}; if (typeof (FinishMessage) == "undefined"){FinishMessage = "Ended"}; if (typeof (CountStepper) != "number"){CountStepper = - 1}; if (typeof (CountActive) == "undefined"){CountActive = true}; if (typeof (LeadingZero) == "undefined"){LeadingZero = true}; CountStepper = Math.ceil(CountStepper); if (CountStepper == 0){CountActive = false}; var dthen = new Date(TargetDate); var dnow = new Date(GMKT.ServiceInfo.ServerTime); if (DisplayType == "TXT"){Countdown.CountBackTxt(Math.floor((CountStepper > 0?new Date(dnow - dthen):new Date(dthen - dnow)).valueOf() / 1000), TargetID, (Math.abs(CountStepper) - 1) * 1000 + 990, CountActive, CountStepper, LeadingZero, DisplayFormat, FinishMessage); } else if (DisplayType == "HHMMSS"){Countdown.CountBackHHMMSS(Math.floor((CountStepper > 0?new Date(dnow - dthen):new Date(dthen - dnow)).valueOf() / 1000), TargetID, (Math.abs(CountStepper) - 1) * 1000 + 990, CountActive, CountStepper, LeadingZero); } else if (DisplayType == "SPAN"){Countdown.CountBackSPAN(Math.floor((CountStepper > 0?new Date(dnow - dthen):new Date(dthen - dnow)).valueOf() / 1000), TargetID, (Math.abs(CountStepper) - 1) * 1000 + 990, CountActive, CountStepper, LeadingZero); } else if (DisplayType == "CURRENT"){Countdown.CountBackNOW(Math.floor((CountStepper > 0?new Date(dnow):new Date(dnow)).valueOf() / 1000), TargetID, (Math.abs(CountStepper) - 1) * 1000 + 990, CountActive, CountStepper, LeadingZero); } else if (DisplayType == "MobileMain"){Countdown.CountBackMobileMain(Math.floor((CountStepper > 0?new Date(dnow - dthen):new Date(dthen - dnow)).valueOf() / 1000), TargetID, (Math.abs(CountStepper) - 1) * 1000 + 990, CountActive, CountStepper, LeadingZero); } else if (DisplayType == "MobileIndex6"){Countdown.CountBackMobileIndex6(Math.floor((CountStepper > 0?new Date(dnow - dthen):new Date(dthen - dnow)).valueOf() / 1000), TargetID, (Math.abs(CountStepper) - 1) * 1000 + 990, CountActive, CountStepper, LeadingZero); } else if (DisplayType == "LuckyPrice"){Countdown.CountBackMobileLuckyPrice(Math.floor((CountStepper > 0?new Date(dnow - dthen):new Date(dthen - dnow)).valueOf() / 1000), TargetID, (Math.abs(CountStepper) - 1) * 1000 + 990, CountActive, CountStepper, LeadingZero); } else if (DisplayType == "DailyDealTimer"){Countdown.CountDailyDealMain(Math.floor((CountStepper > 0?new Date(dnow - dthen):new Date(dthen - dnow)).valueOf() / 1000), TargetID, (Math.abs(CountStepper) - 1) * 1000 + 990, CountActive, CountStepper, LeadingZero); } else if (DisplayType == "TabletMain"){Countdown.CountBackTabletMain(Math.floor((CountStepper > 0?new Date(dnow - dthen):new Date(dthen - dnow)).valueOf() / 1000), TargetID, (Math.abs(CountStepper) - 1) * 1000 + 990, CountActive, CountStepper, LeadingZero); } else if (DisplayType == "QTalkEvent"){Countdown.CountBackQTalkEvent(Math.floor((CountStepper > 0?new Date(dnow - dthen):new Date(dthen - dnow)).valueOf() / 1000), TargetID, (Math.abs(CountStepper) - 1) * 1000 + 990, CountActive, CountStepper, LeadingZero); }; }; Countdown.CountBackTabletMain = function(secs, id, period, active, countstepper, leadingzero){var dd, hh, mm, ss, d; if (secs < 0){dd = 0; hh = "00"; mm = "00"; ss = "00"; active = false; } else{dd = (Math.floor(secs / (60 * 60 * 24)) % 365); hh = (Math.floor(secs / (60 * 60)) % 24); if (hh < 10){hh = '0' + hh; }; mm = (Math.floor(secs / 60) % 60); if (mm < 10){mm = '0' + mm; }; ss = (secs % 60); if (ss < 10){ss = '0' + ss; }; d = (Math.floor(secs / 3600)) % (24 * 365); }; var tablet_main_day = __ClientResource["tablet_main_day"]; var html = (dd == 0)?hh + ':' + mm + ':' + ss:d >= 25?String.format(tablet_main_day, dd, hh):(dd == 1)?d + ':' + mm + ':' + ss:''; $('#' + id).html(html); if (active){countdown_event[id] = setTimeout("Countdown.CountBackTabletMain(" + (secs + countstepper) + ", '" + id + "', '" + period + "', '" + active + "', '" + countstepper + "', '" + leadingzero + "')", period); }; }; Countdown.calc = function(secs, num1, num2, leadingzero){s = ((Math.floor(secs / num1)) % num2).toString(); if (leadingzero && s.length < 2){s = "0" + s}; return"<b>" + s + "</b>"; }; Countdown.CountBackTxt = function(secs, id, period, active, countstepper, leadingzero, DisplayFormat, FinishMessage){if (secs < 0){$get(id).innerHTML = FinishMessage; return; }; var DisplayStr = DisplayFormat.replace(/%%D%%/g, Countdown.calc(secs, 86400, 100000, leadingzero)); DisplayStr = DisplayStr.replace(/%%H%%/g, Countdown.calc(secs, 3600, 24, leadingzero)); DisplayStr = DisplayStr.replace(/%%M%%/g, Countdown.calc(secs, 60, 60, leadingzero)); DisplayStr = DisplayStr.replace(/%%S%%/g, Countdown.calc(secs, 1, 60, leadingzero)); $get(id).innerHTML = DisplayStr; if (active){countdown_event[id] = setTimeout("Countdown.CountBackTxt(" + (secs + countstepper) + ", '" + id + "', '" + period + "', '" + active + "', '" + countstepper + "', '" + leadingzero + "', '" + DisplayFormat + "', '" + FinishMessage + "')", period); }; }; Countdown.CountBackHHMMSS = function(secs, id, period, active, countstepper, leadingzero){var ids = id.split(","); for (i = 0; i < ids.length; i++){var _id = ids[i]; if (secs < 0){$get("hh_" + _id).innerHTML = "00"; $get("mm_" + _id).innerHTML = "00"; $get("ss_" + _id).innerHTML = "00"; active = false; return; }; $get("hh_" + _id).innerHTML = Countdown.calc(secs, 3600, 24, leadingzero); $get("mm_" + _id).innerHTML = Countdown.calc(secs, 60, 60, leadingzero); $get("ss_" + _id).innerHTML = Countdown.calc(secs, 1, 60, leadingzero); }; if (active){countdown_event[id] = setTimeout("Countdown.CountBackHHMMSS(" + (secs + countstepper) + ", '" + id + "', '" + period + "', '" + active + "', '" + countstepper + "', '" + leadingzero + "')", period); }; }; Countdown.CountBackMobileIndex6 = function(secs, id, period, active, countstepper, leadingzero){var hh, mm, ss; if (secs < 0){hh = "00"; mm = "00"; ss = "00"; active = false; } else{hh = Countdown.calc(secs, 3600, (24 * 365), leadingzero); mm = Countdown.calc(secs, 60, 60, leadingzero); ss = Countdown.calc(secs, 1, 60, leadingzero); }; $('#' + id).html(hh + ':' + mm + ':' + ss); if (active){countdown_event[id] = setTimeout("Countdown.CountBackMobileIndex6(" + (secs + countstepper) + ", '" + id + "', '" + period + "', '" + active + "', '" + countstepper + "', '" + leadingzero + "')", period); }; }; Countdown.CountBackMobileLuckyPrice = function(secs, id, period, active, countstepper, leadingzero){var dd, hh, mm, ss; if (secs < 0){dd = 0; hh = "00"; mm = "00"; ss = "00"; active = false; } else{dd = (Math.floor(secs / (60 * 60 * 24)) % 365); hh = (Math.floor(secs / (60 * 60)) % 24); if (hh < 10){hh = '0' + hh; }; mm = (Math.floor(secs / 60) % 60); if (mm < 10){mm = '0' + mm; }; ss = (secs % 60); if (ss < 10){ss = '0' + ss; }; }; var day = __ClientResource["__master/basemasterpage.master__day"]; var days = __ClientResource["__master/basemasterpage.master__days"]; var html = (dd == 0)?hh + ' : ' + mm + ' : ' + ss:(dd == 1)?dd + day + ' ' + hh + ':' + mm + ':' + ss:(dd >= 10)?dd + days:(dd > 1)?dd + days + ' ' + hh + ':' + mm + ':' + ss:''; $('#' + id).html(html); if (active){countdown_event[id] = setTimeout("Countdown.CountBackMobileLuckyPrice(" + (secs + countstepper) + ", '" + id + "', '" + period + "', '" + active + "', '" + countstepper + "', '" + leadingzero + "')", period); }; }; Countdown.CountBackMobileMain = function(secs, id, period, active, countstepper, leadingzero){var hh, mm, ss; if (secs < 0){hh = "00"; mm = "00"; ss = "00"; active = false; } else{hh = Countdown.calc(secs, 3600, 24, leadingzero); mm = Countdown.calc(secs, 60, 60, leadingzero); ss = Countdown.calc(secs, 1, 60, leadingzero); }; $('#' + id).html('<span class="ic ic_time2"></span> <span id="hh_timesale">' + hh + '</span> : <span id="mm_timesale">' + mm + '</span> : <span id="ss_timesale">' + ss + '</span>'); if (active){countdown_event[id] = setTimeout("Countdown.CountBackMobileMain(" + (secs + countstepper) + ", '" + id + "', '" + period + "', '" + active + "', '" + countstepper + "', '" + leadingzero + "')", period); }; }; Countdown.CountDailyDealMain = function(secs, id, period, active, countstepper, leadingzero){var hh, mm, ss; var hh_a, hh_b, mm_a, mm_b, ss_a, ss_b; if (secs < 0){hh_a = "0"; hh_b = "0"; mm_a = "0"; mm_b = "0"; ss_a = "0"; ss_b = "0"; active = false; return; } else{hh = Countdown.calc(secs, 3600, 24, leadingzero); mm = Countdown.calc(secs, 60, 60, leadingzero); ss = Countdown.calc(secs, 1, 60, leadingzero); hh_a = hh.substr(3, 1); hh_b = hh.substr(4, 1); mm_a = mm.substr(3, 1); mm_b = mm.substr(4, 1); ss_a = ss.substr(3, 1); ss_b = ss.substr(4, 1); }; $get("hh_" + id).innerHTML = '<em>' + hh_a + '</em><em>' + hh_b + '</em>'; $get("mm_" + id).innerHTML = '<em>' + mm_a + '</em><em>' + mm_b + '</em>'; $get("ss_" + id).innerHTML = '<em>' + ss_a + '</em><em>' + ss_b + '</em>'; if (active){countdown_event[id] = setTimeout("Countdown.CountDailyDealMain(" + (secs + countstepper) + ", '" + id + "', '" + period + "', '" + active + "', '" + countstepper + "', '" + leadingzero + "')", period); }; }; Countdown.CountBackSPAN = function(secs, id, period, active, countstepper, leadingzero){if (secs < 0){$get("hh_" + id).innerHTML = "<span>0</span><span>0</span>"; $get("mm_" + id).innerHTML = "<span>0</span><span>0</span>"; $get("ss_" + id).innerHTML = "<span>0</span><span>0</span>"; active = false; return; }; var hh = Countdown.calc(secs, 3600, 24, leadingzero); var mm = Countdown.calc(secs, 60, 60, leadingzero); var ss = Countdown.calc(secs, 1, 60, leadingzero); var hh_a = hh.substr(3, 1); var hh_b = hh.substr(4, 1); var mm_a = mm.substr(3, 1); var mm_b = mm.substr(4, 1); var ss_a = ss.substr(3, 1); var ss_b = ss.substr(4, 1); $get("hh_" + id).innerHTML = '<span>' + hh_a + '</span><span>' + hh_b + '</span>'; $get("mm_" + id).innerHTML = '<span>' + mm_a + '</span><span>' + mm_b + '</span>'; $get("ss_" + id).innerHTML = '<span>' + ss_a + '</span><span>' + ss_b + '</span>'; if (active){countdown_event[id] = setTimeout("Countdown.CountBackSPAN(" + (secs + countstepper) + ", '" + id + "', '" + period + "', '" + active + "', '" + countstepper + "', '" + leadingzero + "')", period); }; }; Countdown.CountBackNOW = function(secs, id, period, active, countstepper, leadingzero){if (secs < 0){$get("hh_" + id).innerHTML = "00"; $get("mm_" + id).innerHTML = "00"; $get("ss_" + id).innerHTML = "00"; active = false; return; }; var d = new Date(); $get("hh_" + id).innerHTML = (d.getHours().toString().length < 2)?"<b>" + "0" + d.getHours() + "</b>":"<b>" + d.getHours() + "</b>"; $get("mm_" + id).innerHTML = (d.getMinutes().toString().length < 2)?"<b>" + "0" + d.getMinutes() + "</b>":"<b>" + d.getMinutes() + "</b>"; $get("ss_" + id).innerHTML = (d.getSeconds().toString().length < 2)?"<b>" + "0" + d.getSeconds() + "</b>":"<b>" + d.getSeconds() + "</b>"; if (active){countdown_event[id] = setTimeout("Countdown.CountBackNOW(" + (secs - countstepper) + ", '" + id + "', '" + period + "', '" + active + "', '" + countstepper + "', '" + leadingzero + "')", period); }; }; Countdown.CountBackQTalkEvent = function(secs, id, period, active, countstepper, leadingzero){if (secs < 0){$("#remain_day").html("0"); $("#remain_hour").html("00"); $("#remain_minute").html("00"); active = false; return; }; $("#remain_day").html(Countdown.calc(secs, 86400, 30, leadingzero)); $("#remain_hour").html(Countdown.calc(secs, 3600, 24, leadingzero)); $("#remain_minute").html(Countdown.calc(secs, 60, 60, leadingzero)); if (active){countdown_event[id] = setTimeout("Countdown.CountBackQTalkEvent(" + (secs + countstepper) + ", '" + id + "', '" + period + "', '" + active + "', '" + countstepper + "', '" + leadingzero + "')", period); }; }
var ETC = function(){}; ETC.SetServerTimeTic = function(){var now = new Date(GMKT.ServiceInfo.ServerTime); now.setTime(now.getTime() + 1000); GMKT.ServiceInfo.ServerTime = now; setTimeout(ETC.SetServerTimeTic, 1000); }; ETC.GetSSLContents = function(contents){if (window.location.protocol == "https:"){contents = contents.replace(/http:\/\/static.image-gmkt.com/gi, __PAGE_VALUE.STATIC_SSL_IMAGE_PATH); contents = contents.replace(/http:\/\/dp.image-gmkt.com/gi, __PAGE_VALUE.DP_SSL_IMAGE_PATH); contents = contents.replace(/http:\/\/gd.image-gmkt.com/gi, __PAGE_VALUE.GOODS_SSL_IMAGE_PATH); if (GMKT.ServiceInfo.nation == "CN"){contents = contents.replace(/http:\/\/static.qoo10.cn/gi, __PAGE_VALUE.STATIC_SSL_IMAGE_PATH); contents = contents.replace(/http:\/\/dp.qoo10.cn/gi, __PAGE_VALUE.DP_SSL_IMAGE_PATH); contents = contents.replace(/http:\/\/gd.qoo10.cn/gi, __PAGE_VALUE.GOODS_SSL_IMAGE_PATH); contents = contents.replace(/http:\/\/static.image-qoo10.cn/gi, __PAGE_VALUE.STATIC_SSL_IMAGE_PATH); contents = contents.replace(/http:\/\/dp.image-qoo10.cn/gi, __PAGE_VALUE.DP_SSL_IMAGE_PATH); contents = contents.replace(/http:\/\/gd.image-qoo10.cn/gi, __PAGE_VALUE.GOODS_SSL_IMAGE_PATH); }; }; return contents; }; ETC.LinkChange = function(url){if (GMKT.ServiceInfo.nation == "CN"){url = url.replace(/http:\/\/dp.image-gmkt.com/gi, __PAGE_VALUE.DP_IMAGE_PATH); }; return url; }; ETC.GetStaticImageURLRoot = function(url){var buffer = Public.getStaticImgPath(); if (url.indexOf("/") == 0){buffer = buffer + url; } else{buffer = buffer + '/' + url; }; return buffer; }; ETC.GetDatePeriod = function(end_dt, type, start_dt){start_dt = (start_dt == undefined)?new Date(GMKT.ServiceInfo.ServerTime):new Date(start_dt); type = (type == undefined)?'DAY':type.toUpperCase(); if (end_dt == undefined){return false; } else{end_dt = new Date(end_dt); }; var compare = end_dt - start_dt; if (type == 'DAY'){return compare / (1000 * 60 * 60 * 24); } else if (type == 'HOUR'){return compare / (1000 * 60 * 60); } else if (type == 'MINUTE'){return compare / (1000 * 60); } else{return compare / 1000; }; }; ETC.GetDate = function(date){if (date == undefined){date = new Date(GMKT.ServiceInfo.ServerTime); } else if (date.length >= 22){date = new Date(eval(date.replace(/\//gi, ''))); } else if (date.length == 14){var year = date.substring(0, 4); var month = date.substring(4, 6); var day = date.substring(6, 8); var hour = date.substring(8, 10); var min = date.substring(10, 12); var sec = date.substring(12, 14); date = year + '/' + month + '/' + day + ' ' + hour + ':' + min + ':' + sec; date = new Date(date); } else{date = new Date(date); }; return date; }; ETC.GetShuffleArray = function(array){var count = array.length; var shuffle_array = new Array(); var index_list = new Array(); for (var i = 0; i < count; i++){index_list.push(i); }; while (index_list.length > 0){var index = Math.floor(Math.random() * index_list.length); var item = array[index_list[index]]; shuffle_array.push(item); index_list.splice(index, 1); }; return shuffle_array; }
function VideoHelper(p_vc_no, p_divId){this.VC_NO = p_vc_no; this.ID = p_divId; this.Player = jwplayer(this.ID); this.PlayerType = "JWPlayer"; this.PlayCallbackFunc = null; this.StopCallbackFunc = null; this.FullScreenCallbackFunc = null; this.ISPlayed = false; this.ISErrorCheck = false; this.Global_Order_Type = "L"; this.ViewErrorCallBackFunc = null; this.Init = function(video_path, thumbnailPath, width, height, ratio, playCallbackFunc, stopCallbackFunc, autoPlay, fullScreenCallbackFunc, global_order_type, viewErrorCallBackFunc){this.PlayCallbackFunc = playCallbackFunc; this.StopCallbackFunc = stopCallbackFunc; this.FullScreenCallbackFunc = fullScreenCallbackFunc; if (global_order_type == undefined || global_order_type == null){global_order_type = "L"; }; this.Global_Order_Type = global_order_type; this.ViewErrorCallBackFunc = viewErrorCallBackFunc; if (video_path == null || video_path == "" && parseInt(this.VC_NO) > 0){var param = new RMSParam(); param.add("vc_no_array", this.VC_NO); param.add("global_order_type", this.Global_Order_Type); var result = RMSHelper.callWebMethod(Public.getServiceUrl("swe_VideoAjaxService.asmx"), "GetVideoList", param.toJson()); if (result != null && result.Rows.length > 0 && result.Rows[0]["use_yn"] == "Y"){video_path = result.Rows[0]["play_url"].toString(); } else{this.ViewError(); return; }; }; video_path = video_path.replace("http:", "").replace("https:", ""); if (video_path.indexOf("youku") >= 0){this.PlayerType = "YouKu"; if (video_path.indexOf("/id_") >= 0){video_path = video_path.substring(video_path.indexOf("/id_") + 4, video_path.length); video_path = video_path.substring(0, video_path.indexOf(".")); video_path = "//player.youku.com/embed/" + video_path; }; $("#" + this.ID).attr("class", "video_iframe"); var tmpHtml = "<iframe width='" + width + "' height='" + height + "' frameborder='0' src='" + video_path + "'></iframe>"; $("#" + this.ID).html(tmpHtml); } else{this.PlayerType = "JWPlayer"; var video_id = video_path; var isYTB = false; if (video_path.indexOf("//youtu.be/") >= 0 || video_path.indexOf("//www.youtube.com/watch") >= 0 || video_path.indexOf("//m.youtube.com/watch") >= 0 || video_path.indexOf("//www.youtube.com/embed") >= 0 || video_path.indexOf("//m.youtube.com/embed") >= 0){video_id = this.GetYoutubeVideoId(video_path); isYTB = true; }
var start_time = ""; if (isYTB){if (video_path.indexOf("&t=") >= 0 || video_path.indexOf("?t=") >= 0){var p_word = video_path.indexOf("&") >= 0?"&":"?"; var t_time_param = video_path.substring(video_path.indexOf(p_word + "t=") + 3, video_path.length); var last_idx = t_time_param.indexOf(p_word) > 0?t_time_param.indexOf(p_word):t_time_param.length; start_time = t_time_param.substring(0, last_idx); }
video_path = "//youtu.be/" + video_id; }; var optionStr = {"file":video_path, "androidhls":true}; if (thumbnailPath !== undefined && thumbnailPath != null){optionStr["image"] = thumbnailPath; }; if (width !== undefined && width != null){optionStr["width"] = width; }; if (height !== undefined && height != null){optionStr["height"] = height; }; if (ratio !== undefined && ratio != null){optionStr["aspectratio"] = ratio; }; this.Player.setup(optionStr); var p_divId = this.ID; var p_time = 0; if (start_time != ""){var t_time_obj = start_time.match(/[0-9]+h|[0-9]+s|[0-9]+m/gi, ""); if (t_time_obj != null && t_time_obj.length > 0){var hour = start_time.match(/[0-9]+h/gi, "") != null?start_time.match(/[0-9]+h/gi, "")[0].replace('h', ''):0; var minute = start_time.match(/[0-9]+m/gi, "") != null?start_time.match(/[0-9]+m/gi, "")[0].replace('m', ''):0; var second = start_time.match(/[0-9]+s/gi, "") != null?start_time.match(/[0-9]+s/gi, "")[0].replace('s', ''):0; p_time = (parseInt(hour) * 60 * 60) + (parseInt(minute) * 60) + parseInt(second); } else
        p_time = start_time; }
this.Player.onReady(function(){if (isYTB && DeviceUtil.isMobile()){$(".jw-display-icon-container .jw-icon-display").attr("style", "pointer-events:none"); }; autoPlay = (autoPlay != undefined && autoPlay == true?true:false); if (autoPlay == true){if ((isYTB == true && DeviceUtil.isMobile() == false) || isYTB == false){window.setTimeout(function(){jwplayer(p_divId).play(); }, 100); }; }; if (p_time > 0){jwplayer(p_divId).once('play', function(){jwplayer(p_divId).seek(p_time); }); }}); this.Player.on('play', this.Callback_PLAY(this.VC_NO, this.PlayCallbackFunc, this.Global_Order_Type)); this.Player.on('stop', this.Callback_STOP(this.VC_NO, this.StopCallbackFunc, this.Global_Order_Type)); this.Player.on('fullscreen', this.Callback_FULLSCREEN(this.VC_NO, this.FullScreenCallbackFunc)); this.Player.on('error', this.Callback_Error(this.VC_NO, optionStr, this.Player, this.Global_Order_Type)); }; }; this.GetYoutubeVideoId = function(str){var result = ""; var obj = str.match(/(?:youtu\.be\/|youtube\.com(?:\/embed\/|\/v\/|\/watch\?v=|\/user\/\S+|\/ytscreeningroom\?v=|\/sandalsResorts#\w\/\w\/.*\/))([^\/&]{10,12})/); if (obj != null && obj.length > 0 && obj[1] != null && obj[1] != "")
        result = obj[1].replace("?", ""); return result; }; this.ViewError = function(){$("#" + this.ID).removeClass(); $("#" + this.ID).addClass("video_noshow"); $("#" + this.ID).html("<span class='txt'>" + MultiLang.findCommonResource("Master/Dynamic", "InvalidVideoUrl") + "</span>"); var ret = RMSHelper.dynamic.executeScalar("Video.SetVideoContentsFailedToPlayCount", RMSParam.create().add("vc_no", this.VC_NO).add("succeed_to_play_yn", "N")); if (this.ViewErrorCallBackFunc != null && this.ViewErrorCallBackFunc != ""){var call_back_func_object = this.ViewErrorCallBackFunc.split(".")[0]; var call_back_func_function = this.ViewErrorCallBackFunc.split(".")[1]; if (call_back_func_function != undefined && call_back_func_function != "" && window[call_back_func_object][call_back_func_function])
window[call_back_func_object][call_back_func_function](this.ID);  else if (window[call_back_func_object])
window[call_back_func_object](this.ID); }}; this.Callback_PLAY = function(vc_no, callfunc, global_order_type){return function(){if (!this.ISPlayed){var param = new RMSParam(); param.add("vc_no", vc_no); param.add("watch_yn", "Y"); param.add("global_order_type", global_order_type); RMSHelper.asyncCallWebMethod(Public.getServiceUrl("swe_VideoAjaxService.asmx"), "SetVideoContentsWatchCount", param.toJson(), function(result){}); var ret = RMSHelper.dynamic.executeScalar("Video.SetVideoContentsFailedToPlayCount", RMSParam.create().add("vc_no", this.VC_NO).add("succeed_to_play_yn", "Y")); if (callfunc)window[callfunc](); }; this.ISPlayed = true; }.bind(this); }; this.Callback_STOP = function(vc_no, callfunc, global_order_type){return function(){var param = new RMSParam(); param.add("vc_no", vc_no); param.add("watch_yn", "N"); param.add("global_order_type", global_order_type); RMSHelper.asyncCallWebMethod(Public.getServiceUrl("swe_VideoAjaxService.asmx"), "SetVideoContentsWatchCount", param.toJson(), function(result){}); if (callfunc){window[callfunc](); }; }; }; this.Callback_FULLSCREEN = function(vc_no, callfunc){return function(){if (callfunc){window[callfunc](); }; }; }; this.Like = function(){if (!Public.isLogin()){return false; }; var param = new RMSParam(); param.add("vc_no", this.VC_NO); param.add("like_yn", "Y"); param.add("global_order_type", this.Global_Order_Type); var result = RMSHelper.callWebMethod(Public.getServiceUrl("swe_VideoAjaxService.asmx"), "SetVideoContentsLikeCount", param.toJson()); return result; }; this.UnLike = function(){if (!Public.isLogin()){return false; }; var param = new RMSParam(); param.add("vc_no", this.VC_NO); param.add("like_yn", "N"); param.add("global_order_type", this.Global_Order_Type); var result = RMSHelper.callWebMethod(Public.getServiceUrl("swe_VideoAjaxService.asmx"), "SetVideoContentsLikeCount", param.toJson()); return result; }; this.Callback_Error = function(vc_no, optionStr, prmPlayer, global_order_type){return function(){var org_video_path = ""; if (!this.ISErrorCheck){if (parseInt(vc_no) > 0){var param = new RMSParam(); param.add("vc_no_array", vc_no); param.add("global_order_type", global_order_type); var result = RMSHelper.callWebMethod(Public.getServiceUrl("swe_VideoAjaxService.asmx"), "GetVideoList", param.toJson()); if (result != null && result.Rows != null && result.Rows.length > 0){org_video_path = result.Rows[0]["org_play_url"].toString(); optionStr["file"] = org_video_path; prmPlayer.load(optionStr); prmPlayer.play(); }; }; } else{this.ViewError(); }; this.ISErrorCheck = true; }.bind(this); }; }; var __cachereset = 1;
// (c)2013 Giosis Group

        $(document).ready(function(e){$("#a_OptAllVw_closeBTN").bind("click", function(e){$("#OptionAllList").click(); }); }); var OptAllVw = function(){}; OptAllVw.isLoad = false; OptAllVw.OptionArray = null; OptAllVw.ColCount = 0; OptAllVw.SelectValue = new Array(); OptAllVw.SortAName = ""; OptAllVw.SortBName = ""; OptAllVw.ActionBinding = function(){}
OptAllVw.Open = function(){if (!OptAllVw.isLoad){OptAllVw.init(); }
if (OptAllVw.ColCount == 2 || OptAllVw.ColCount == 3){if ($get("div_OptAllVw_main").style.display != null && $get("div_OptAllVw_main").style.display == "none"){$("#OptionAllList").addClass("on"); $get("div_OptAllVw_main").style.display = ""; }
else{$("#OptionAllList").removeClass("on"); $get("div_OptAllVw_main").style.display = "none"; }}}
OptAllVw.init = function(){if (!OptAllVw.isLoad){OptAllVw.GetInventoryList(); if (OptAllVw.OptionArray != null && OptAllVw.OptionArray.length > 0){if (OptAllVw.OptionArray[0].sel_name5 != null && OptAllVw.OptionArray[0].sel_name5 != ""){OptAllVw.ColCount = 5; }
else if (OptAllVw.OptionArray[0].sel_name4 != null && OptAllVw.OptionArray[0].sel_name4 != ""){OptAllVw.ColCount = 4; }
else if (OptAllVw.OptionArray[0].sel_name3 != null && OptAllVw.OptionArray[0].sel_name3 != ""){OptAllVw.ColCount = 3; }
else if (OptAllVw.OptionArray[0].sel_name2 != null && OptAllVw.OptionArray[0].sel_name2 != ""){OptAllVw.ColCount = 2; }
else if (OptAllVw.OptionArray[0].sel_name1 != null && OptAllVw.OptionArray[0].sel_name1 != ""){OptAllVw.ColCount = 1; }}
OptAllVw.isLoad = true; setTimeout(function(){OptAllVw.MakeTable(OptAllVw.OptionArray); }, 100); }}
OptAllVw.MakeTable = function(tmpArr){var tmpHtml = ""; if (tmpArr != null && tmpArr.length > 0){tmpHtml = '<table summary="">'
        tmpHtml += '<colgroup>'; for (var i = 0; i < OptAllVw.ColCount; i++){tmpHtml += '<col width="110px" />'; }
tmpHtml += '<col width="110px" />'; tmpHtml += '<col width="66px" />'; tmpHtml += '</colgroup>'; tmpHtml += '<thead>'; tmpHtml += '<tr>'; for (var i = 1; i <= OptAllVw.ColCount; i++){tmpHtml += '<th scope="col" onclick="OptAllVw.Sort(' + i + ');"><span class="array_as" idx="' + i + '">' + tmpArr[0]["client_sel_name" + i] + '</span></th>'; }
tmpHtml += '<th scope="col" onclick="OptAllVw.Sort(4);"><span class="array_as" idx="4">' + MultiLang.findCommonResource("Control/Smart/OptionAllViewer.ascx", "AdditionalPrice") + '</span></th>'; tmpHtml += '<th scope="col" onclick="OptAllVw.Sort(5);"><span class="array_as" idx="5">' + MultiLang.findCommonResource("Control/Smart/OptionAllViewer.ascx", "Qty") + '</span></th>'; tmpHtml += '</tr>'; tmpHtml += '</thead>'; tmpHtml += '<tbody id="tb_OptAllVw_op_list">'; tmpHtml += OptAllVw.MakeTbody(tmpArr); tmpHtml += '</tbody>'; tmpHtml += '</table>'; }
$("#div_OptAllVw_scroll").html(tmpHtml)}
OptAllVw.MakeTbody = function(tmpArr){var tmpHtml = ""; var target_currency = $get("hi_OptAllVw_target_currency").value; if (tmpArr != null && tmpArr.length > 0){for (var k = 0; k < tmpArr.length; k++){var tmpCnt = parseInt(tmpArr[k]["remain_cnt"]); if (tmpCnt <= 0 || tmpArr[k]["inventory_yn"] == "N"){tmpCnt = 0; }
tmpHtml += '<tr ' + (tmpCnt == 0?'class="soldout"':'onclick="OptAllVw.SelectInventoryTR(' + k + ');" onmouseout="OptAllVw.MouseOutInventoryTR();" onmouseover="OptAllVw.MouseOverInventoryTR(' + k + ');"') + '>'; for (var i = 1; i <= OptAllVw.ColCount; i++){tmpHtml += '<td><span>' + tmpArr[k]["client_sel_value" + i] + '</span></td>'; }
var tmpPrice = parseFloat(tmpArr[k]["sel_item_price"]) == 0?0:((parseFloat(tmpArr[k]["sel_item_price"]) > 0?"+":"") + PriceUtil.FormatCurrencyCode(tmpArr[k]["sel_item_price"], target_currency)); tmpHtml += '<td><span>' + tmpPrice + '</span></td>'; tmpHtml += '<td><span>' + (tmpCnt == 0?MultiLang.findCommonResource("Control/Smart/OptionAllViewer.ascx", "SoldOut"):tmpCnt) + '</span></td>'; tmpHtml += '</tr>'; }}
return tmpHtml; }
OptAllVw.GetInventoryList = function(){var param = new RMSParam(); param.add("inventory_no", $get("hi_OptAllVw_inventory_no").value); param.add("lang_cd", $get("hi_OptAllVw_lang_cd").value); param.add("inventory_yn", ""); param.add("link_type", $get("hi_OptAllVw_link_type").value); param.add("gd_no", $get("hi_OptAllVw_gd_no").value); param.add("global_order_type", $get("hi_OptAllVw_global_order_type").value); var ret = RMSHelper.callWebMethod(Public.getServiceUrl("swe_GoodsAjaxService.asmx"), "GetGoodsInventoryAvailableList", param.toJson()); if (ret != null && ret.Rows != null){OptAllVw.OptionArray = ret.Rows; }}
OptAllVw.SelectInventoryTR = function(prmIdx){OptAllVw.SelectValueInit(); if (OptAllVw.OptionArray != null && OptAllVw.OptionArray[prmIdx] != null){OptAllVw.SelectValue[0] = OptAllVw.OptionArray[prmIdx]["sel_value1"]; if (OptAllVw.ColCount >= 2){OptAllVw.SelectValue[1] = OptAllVw.OptionArray[prmIdx]["sel_value2"]; }
if (OptAllVw.ColCount == 3){OptAllVw.SelectValue[2] = OptAllVw.OptionArray[prmIdx]["sel_value3"]; }
OptAllVwSelect_OnClick(); $get("div_OptAllVw_main").style.display = "none"; }}
OptAllVw.MouseOverInventoryTR = function(prmIdx){if (OptAllVw.OptionArray != null && OptAllVw.OptionArray[prmIdx] != null){var tmpImgNo = OptAllVw.OptionArray[prmIdx]["main_img_no"]; OptAllVwMouseOver(tmpImgNo); }}
OptAllVw.MouseOutInventoryTR = function(){OptAllVwMouseOut(); }
OptAllVw.SelectValueInit = function(){OptAllVw.SelectValue = new Array(); }
OptAllVw.Sort = function(prmIdx){var tmpContrl = $("#div_OptAllVw_scroll").find("th span[idx='" + prmIdx + "']"); var tmpClass = $(tmpContrl).attr("class"); $(tmpContrl).removeClass(tmpClass); switch (prmIdx){case 1:OptAllVw.SortAName = "client_sel_value1"; OptAllVw.SortBName = "client_sel_value1"; if (tmpClass == "array_as"){OptAllVw.OptionArray.sort(OptAllVw.ReverseArrVal); tmpClass = "array_des"; }
else{OptAllVw.OptionArray.sort(OptAllVw.SortArrVal); tmpClass = "array_as"; }
OptAllVw.SortAName = ""; OptAllVw.SortBName = ""; break; case 2:OptAllVw.SortAName = "client_sel_value2"; OptAllVw.SortBName = "client_sel_value2"; if (tmpClass == "array_as"){OptAllVw.OptionArray.sort(OptAllVw.ReverseArrVal); tmpClass = "array_des"; }
else{OptAllVw.OptionArray.sort(OptAllVw.SortArrVal); tmpClass = "array_as"; }
OptAllVw.SortAName = ""; OptAllVw.SortBName = ""; break; case 3:OptAllVw.SortAName = "client_sel_value3"; OptAllVw.SortBName = "client_sel_value3"; if (tmpClass == "array_as"){OptAllVw.OptionArray.sort(OptAllVw.ReverseArrVal); tmpClass = "array_des"; }
else{OptAllVw.OptionArray.sort(OptAllVw.SortArrVal); tmpClass = "array_as"; }
OptAllVw.SortAName = ""; OptAllVw.SortBName = ""; break; case 4:OptAllVw.SortAName = "sel_item_price"; OptAllVw.SortBName = "sel_item_price"; if (tmpClass == "array_as"){OptAllVw.OptionArray.sort(OptAllVw.ReverseArrVal); tmpClass = "array_des"; }
else{OptAllVw.OptionArray.sort(OptAllVw.SortArrVal); tmpClass = "array_as"; }
OptAllVw.SortAName = ""; OptAllVw.SortBName = ""; break; case 5:OptAllVw.SortAName = "remain_cnt"; OptAllVw.SortBName = "remain_cnt"; if (tmpClass == "array_as"){OptAllVw.OptionArray.sort(OptAllVw.ReverseArrVal); tmpClass = "array_des"; }
else{OptAllVw.OptionArray.sort(OptAllVw.SortArrVal); tmpClass = "array_as"; }
OptAllVw.SortAName = ""; OptAllVw.SortBName = ""; break; }
$(tmpContrl).addClass(tmpClass); var tmpHTML = OptAllVw.MakeTbody(OptAllVw.OptionArray); $("#tb_OptAllVw_op_list").html(tmpHTML)}
OptAllVw.SortArrVal = function(a, b){if (a[OptAllVw.SortAName] > b[OptAllVw.SortBName])return 1; if (a[OptAllVw.SortAName] < b[OptAllVw.SortBName])return - 1; return 0; }
OptAllVw.ReverseArrVal = function(a, b){if (a[OptAllVw.SortAName] > b[OptAllVw.SortBName])return - 1; if (a[OptAllVw.SortAName] < b[OptAllVw.SortBName])return 1; return 0; }
}